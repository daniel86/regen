
set(SOURCES
        states/state.cpp
        states/render-state.cpp
        states/shader-input-state.cpp
        states/fbo-state.cpp
        states/texture-state.cpp
        states/shader-state.cpp
        states/light-state.cpp
        states/material-state.cpp
        states/camera.cpp
        states/model-transformation.cpp
        states/bones-state.cpp
        states/tesselation-state.cpp
        states/blit-state.cpp
        states/depth-state.cpp
        states/cull-state.cpp
        states/polygon-offset-state.cpp
        states/blend-state.cpp
        states/feedback-state.cpp
        states/assimp-importer.cpp
        states/shading.cpp
        states/ambient-occlusion.cpp
        states/distance-fog.cpp
        states/volumetric-fog.cpp
        states/transparency-state.cpp
        states/blur-state.cpp
        states/tonemap.cpp
        states/depth-of-field.cpp
        states/anti-aliasing.cpp
        states/picking.cpp
)

install(
    FILES
        shader-input-state.h
        assimp-importer.h
        blend-state.h
        blit-state.h
        depth-state.h
        cull-state.h
        polygon-offset-state.h
        bones-state.h
        camera.h
        fbo-state.h
        fog-state.h
        light-state.h
        material-state.h
        model-transformation.h
        render-state.h
        shader-state.h
        state.h
        tesselation-state.h
        texture-state.h
        feedback-state.h
        shading.h
        ambient-occlusion.h
        distance-fog.h
        volumetric-fog.h
        transparency-state.h
        blur-state.h
        tonemap.h
        depth-of-field.h
        anti-aliasing.h
        picking.h
    DESTINATION ${HEADER_INSTALL_PATH}/states
    )

install(
    FILES
        shader/transparency.glsl
        shader/blending.glsl
        shader/light.glsl
        shader/tesselation-shader.glsl
        shader/textures.glsl
        shader/blur.glsl
        shader/depth_of_field.glsl
    DESTINATION ${SHADER_INSTALL_PATH}
    )
