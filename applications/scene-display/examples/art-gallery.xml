<?xml version="1.0" encoding="UTF-8" ?>

<include xml-file="scene-display/examples/templates/default.xml"/>
<include xml-file="scene-display/examples/templates/fluid-smoke.xml"/>
<include xml-file="scene-display/examples/templates/fluid-velocity.xml"/>
<include xml-file="scene-display/examples/templates/mandelbrot.xml"/>

<node id="configuration">
    <camera id="main-camera"
            mode="first-person"
            eye-offset="0.0,0.0,0.0"
            horizontal-orientation="1.5707963"
            ease-in-out="1.4"
            speed="0.02"
            anchor-pause-time="0.5"
            anchor-time-scale="0.6"
            camera-orientation="1.58">
        <!-- anchors can be cycled through in the GUI -->
        <anchor type="look-at" transform="dragon-tf" offset="0.0, 2.0, 14.0" />
        <anchor type="look-at" transform="dragon-tf" offset="0.0, 2.0, 4.0" />
        <anchor type="look-at" transform="venus-tf"  offset="0.0, 2.0, 18.0" />
        <anchor type="look-at" transform="bunny-tf"  offset="8.0, 2.0, 10.0" />
        <anchor type="look-at" transform="reflector-tf" offset="44.0, 0.0, 0.0" />
        <anchor type="look-at" transform="velocity-picture-tf" offset="0.0, 2.0, -8.0" />
        <anchor type="look-at" transform="smoke-picture-tf" offset="0.0, 2.0, -14.0" />
        <anchor type="look-at" transform="video-picture-tf" offset="0.0, 2.0, -14.0" />
        <anchor type="look-at" transform="video-picture-tf" offset="0.0, 12.0, -18.0" />
        <anchor type="look-at" transform="mandelbrot-picture-tf" offset="0.0, 2.0, -14.0" />
        <anchor type="look-at" transform="reflector-tf" offset="52.0, 30.0, 0.0" />
        <!--
        <anchor pos=" 2.0, 0.5, 0.0" dir="-2.0,-0.5, 0.0" />
        <anchor pos=" 0.0, 0.5,-2.0" dir=" 0.0,-0.5, 2.0" />
        <anchor pos="-2.0, 0.0,  0.0" dir=" 2.0, 0.0, 0.0" />
        <anchor pos=" 0.0,  0.0,  2.0" dir=" 0.0,  0.0,-2.0" />
        <anchor pos=" 2.0, -0.5, 0.0" dir="-2.0, 0.5, 0.0" />
        <anchor pos=" 0.0, -0.5,-2.0" dir=" 0.0, 0.5, 2.0" />
        <anchor pos="-2.0,  0.0,  0.0" dir=" 2.0,  0.0, 0.0" />
        -->
    </camera>
    <mouse>
        <click node="video-picture" interaction="video-toggle" />
        <click node="smoke-picture" interaction-node="smoke-splat-interaction" />
    </mouse>
</node>

<node id="initialize">
    <node import="fluid-smoke-initialize" />
    <node import="fluid-vel-initialize" />
</node>

        <!-- FBOs -->
<fbo id="g-buffer"
     size-mode="rel" size="1.0,1.0"
     pixel-type="UNSIGNED_BYTE"
     pixel-size="16"
     pixel-components="4" >
  <texture id="diffuse0" />
  <texture id="diffuse1" />
  <texture id="specular" />
  <texture id="normal" />
  <depth id="depth" pixel-size="24" />
</fbo>
        <!-- Textures -->
<texture id="ground-color" file="res/textures/brick/color.jpg"/>
<texture id="ground-normal" file="res/textures/brick/normal.jpg"/>
<texture id="ground-height" file="res/textures/brick/height.jpg"/>
<texture id="wall-color" file="res/textures/brickwall/color.jpg"/>
<texture id="wall-normal" file="res/textures/brickwall/normal.jpg"/>
<texture id="wood-color" file="res/textures/materials/wood.png"/>
        <!-- Cameras -->
<camera id="main-camera"
        fov="45.0" near="0.1" far="200.0"
        position="19.0,3.5,0.0"
        direction="1.0,0.0,1.0"/>
        <!-- Lights -->
<light id="picture-spot-center"
       type="SPOT"
       position="-4.0,10.0,14.0"
       direction="0.0,-0.5,0.5"
       diffuse="0.5,0.5,0.63"
       radius="10.0,21.0"
       cone-angles="11.5,25.5"/>
<light id="picture-spot-right"
       type="SPOT"
       position="-13.0,10.0,14.0"
       direction="0.0,-0.5,0.5"
       diffuse="0.5,0.5,0.63"
       radius="10.0,21.0"
       cone-angles="11.5,25.5"/>
<light id="picture-spot-left"
       type="SPOT"
       position="5.0,10.0,14.0"
       direction="0.0,-0.5,0.5"
       diffuse="0.5,0.5,0.63"
       radius="20.0,31.0"
       cone-angles="11.5,25.5"/>
<light id="picture-spot-center-n"
       type="SPOT"
       position="14.0,10.0,14.0"
       direction="0.0,-0.5,0.5"
       diffuse="0.5,0.5,0.63"
       radius="10.0,21.0"
       cone-angles="11.5,25.5"/>
<light id="room-light0"
       type="POINT"
       position="-5.0,10.0,0.0"
       radius="20.0,38.0"
       direction="0.0,-1.0,0.0"
       diffuse="0.8,0.9,0.835"
       ambient="0.6,0.6,0.6"/>
<light id="room-light1"
       type="POINT"
       position="0.0,10.0,0.0"
       radius="20.0,38.0"
       direction="0.0,-1.0,0.0"
       diffuse="0.8,0.9,0.835"
       ambient="0.2,0.2,0.2"/>

        <!-- Meshes -->

<mesh id="ground-mesh"
      type="rectangle"
      lod="4"
      rotation="0.0,0.0,3.1415"
      scaling="40.0,20.0,40.0"
      texco-scaling="7.0,7.0"
      use-normal="1"
      use-texco="1"
      use-tangent="1"
      center="1"
      usage="STATIC">
    <transform>
        <translate value="0.0,-2.0,0.0"/>
    </transform>
</mesh>

<mesh id="box-wall"
      type="box"
      lod="4"
      scaling="20.0,1.0,0.5"
      texco-scaling="20.0,1.0"
      use-normal="1"
      use-tangent="0"
      usage="STATIC">
    <material preset="silver"/>
</mesh>

<mesh id="box-wall-1"
      type="box"
      scaling="6.0,1.0,0.5"
      texco-scaling="6.0,1.0"
      use-normal="1"
      use-tangent="0"
      usage="STATIC">
    <material preset="silver"/>
</mesh>

<mesh id="wall"
      type="rectangle"
      lod="4"
      rotation="0.0,0.0,3.1415"
      scaling="40.0,1.0,10.0"
      texco-scaling="4.0,1.0"
      use-normal="1"
      use-tangent="1"
      center="1"
      usage="STATIC">
    <material preset="silver"/>
</mesh>

        <!--**************************-->
        <!--*** Planar Reflection ****-->
        <!--**************************-->

<fbo id="reflection-buffer"
     size-mode="rel" size="0.75,0.75"
     pixel-type="UNSIGNED_BYTE"
     pixel-size="16"
     pixel-components="4">
    <texture id="diffuse0"/>
    <texture id="diffuse1"/>
    <texture id="specular"/>
    <texture id="normal"/>
    <depth pixel-size="24"/>
</fbo>

<camera id="reflection-camera"
        camera="main-camera"
        reflector="reflector-mesh"
        has-back-face="1"/>

<texture id="reflector-noise" noise="perlin" size="128.0,128.0,1.0"
         baseFrequency="4.0" persistence="0.5" lacunarity="2.5" octaveCount="4"
         swizzle-g="RED" swizzle-b="RED"/>

<mesh id="reflector-mesh"
      type="rectangle"
      lod="0"
      rotation="0.0,0.0,3.1415926"
      scaling="10.0,1.0,40.0"
      use-normal="1"
      use-texco="1"
      use-tangent="0"
      center="1"
      usage="STATIC">
    <transform id="reflector-tf" />
</mesh>
<transform id="reflector-tf">
    <rotate value="0.0,1.5707963,0.0"/>
    <translate value="-20.0,3.0,0.0"/>
</transform>

<node id="Reflection-Pass">
    <camera id="reflection-camera"/>
    <fbo id="reflection-buffer" clear-buffers="0,1,2,3" clear-depth="1"/>

    <node id="Reflection-Geometry">
        <blend mode="src"/>
        <depth test="1" write="1"/>
        <fbo id="reflection-buffer" draw-buffers="0,2,3"/>
        <node import="Shadow-Caster"/>
        <node import="Scene-Geometry"/>
    </node>

    <node id="Reflection-Shading">
        <fbo id="reflection-buffer" draw-buffers="1"/>
        <node>
            <texture name="gDepthTexture" fbo="reflection-buffer" attachment="depth"/>
            <texture name="gDiffuseTexture" fbo="reflection-buffer" attachment="0"/>
            <texture name="gSpecularTexture" fbo="reflection-buffer" attachment="2"/>
            <texture name="gNorWorldTexture" fbo="reflection-buffer" attachment="3"/>
            <node import="Shading-Pass"/>
        </node>
        <node import="Background-Pass0"/>
    </node>

    <node id="Reflection-Fog">
        <depth test="0" write="0"/>
        <node id="volume-fog">
            <fbo id="reflection-buffer" draw-buffers="1"/>
            <blend mode="add"/>
            <texture name="gDepthTexture" fbo="reflection-buffer" attachment="depth"/>
            <node import="Volumetric-Fog-Pass"/>
        </node>
    </node>

    <view id="Planar Reflection">
        <blit src-fbo="reflection-buffer" src-attachment="1" dst-fbo="SCREEN"/>
    </view>
</node>

<node id="Reflectors">
    <depth test="1" write="1"/>
    <define key="SHADING" value="NONE"/>
    <material ambient="1.0,1.0,1.0" diffuse="0.0,0.0,0.0"/>
    <node id="Planar-Reflector">
        <input name="reflectionMatrix" state="reflection-camera" component="viewProjectionMatrix"/>
        <texture name="colorTexture" fbo="reflection-buffer" attachment="1"
                 map-to="COLOR" mapping="PLANAR_REFLECTION" blend-mode="SRC" ignore-alpha="1"/>
        <mesh id="reflector-mesh" shader="regen.models.mesh"/>
    </node>
</node>

        <!--**************************-->
        <!--** ANIMATED PICTURES **-->
        <!--**************************-->

<mesh id="picture-canvas"
      type="rectangle"
      lod="0"
      scaling="4.8,0.1,4.8"
      use-normal="1"
      use-texco="1"
      use-tangent="0"
      center="1"
      usage="STATIC">
</mesh>

<mesh id="picture-frame"
      type="box"
      lod="4"
      scaling="2.8,0.2,2.8"
      texco-scaling="1.6,1.6"
      use-normal="1"
      use-tangent="0"
      usage="STATIC"
      num-instances="4">
    <material preset="silver" specular="0.1,0.1,0.1"/>
    <transform is-instanced="1" >
        <rotate value="0.0,3.14,1.5707963"/>
        <set mode="row" target="translate" x-step="9.0,0.0,0.0" />
        <translate value="-13.0,3.0,20.21" />
    </transform>
</mesh>

<texture id="video-texture" video="res/textures/fluids.avi"/>

<mesh id="video-text" type="text" font="ubuntu" height="0.2" center="1"
      text="Fluid Simulation Playground">
</mesh>

<mesh id="smoke-text" type="text" font="ubuntu" height="0.2" center="1"
      text="Smoke Simulation">
</mesh>

<transform id="smoke-picture-tf">
    <rotate value="1.5707963,0.0,0.0"/>
    <rotate value="0.0,0.0,4.7123889803850005"/>
    <rotate value="0.0,4.7123889803850005,0.0"/>
    <translate value="5.0,3.0,20.0"/>
</transform>
<transform id="video-picture-tf">
    <rotate value="0.0, 0.0, -1.5707963"/>
    <rotate value="0.0, 3.14159265359, 0.0"/>
    <translate value="-4.0, 3.0, 20.0"/>
</transform>
<transform id="velocity-picture-tf">
    <rotate value="0.0, 0.0, -1.5707963"/>
    <rotate value="0.0, 3.14159265359, 0.0"/>
    <translate value="14.0,3.0,20.0"/>
</transform>
<transform id="mandelbrot-picture-tf">
    <rotate value="1.5707963,1.5707963,0.0"/>
    <rotate value="0.0,1.5707963,0.0"/>
    <translate value="-13.0,3.0,20.0"/>
</transform>

<node id="smoke-splat-interaction">
    <blend mode="src" />
    <fbo id="fluid-smoke-splat" clear-buffers="0" draw-buffers="0" />
    <texture name="obstaclesBuffer" fbo="fluid-smoke-obstacles" attachment="0" />
    <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
    <camera id="main-camera" />
    <transform id="smoke-picture-tf" />
    <input type="float" name="splatRadius" value="12.0" />
    <input type="vec4" name="splatValue" value="1.0,1.0,1.0,1.0" />
    <input type="vec2" name="objectSize" value="4.8,4.8" />
    <fullscreen-pass shader="fluid.splat.mouse" />
</node>

<mesh id="velocity-text" type="text" font="ubuntu" height="0.2" center="1"
      text="Fluid Velocity Visualization">
</mesh>

<mesh id="mandelbrot-text" type="text" font="ubuntu" height="0.2" center="1"
      text="Mandelbrot Visualization">
</mesh>

<node id="Pictures">
    <node id="Picture-Canvas">
        <material ambient="1.0,1.0,1.0" diffuse="0.0,0.0,0.0"/>
        <node id="video-picture-canvas">
            <define key="TEXCO_FLIP_X" value="1"/>
            <texture name="colorTexture" id="video-texture" map-to="COLOR" texco-flipping="x" />
            <transform id="video-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh"/>
        </node>
        <node id="smoke-picture-canvas">
            <texture name="colorTexture" fbo="fluid-smoke-output" attachment="0" map-to="COLOR"/>
            <transform id="smoke-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh"/>
        </node>
        <node id="velocity-picture-canvas">
            <texture name="colorTexture" fbo="fluid-vel-output" attachment="0" map-to="COLOR"/>
            <transform id="velocity-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh"/>
        </node>
        <node id="mandelbrot-picture-canvas">
            <texture name="colorTexture" fbo="mandelbrot-buffer" attachment="0" map-to="COLOR"/>
            <transform id="mandelbrot-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh"/>
        </node>
    </node>

    <node id="Picture-Frames">
        <texture name="colorTexture" id="wood-color" map-to="COLOR"/>
        <mesh id="picture-frame" shader="regen.models.mesh"/>
    </node>

    <node id="Picture-Titles">
        <depth test="1" write="0"/>
        <define key="DISCARD_ALPHA" value="1"/>
        <material ambient="0.0,0.0,0.0" diffuse="0.0,0.0,0.0" specular="0.0,0.0,0.0"/>
        <blend mode="alpha" />
        <node id="video-picture-text">
            <transform>
                <rotate value="3.14159265359, 0.0, 0.0"/>
                <translate value="-4.0, 5.75, 19.99"/>
            </transform>
            <mesh id="video-text" shader="regen.models.mesh"/>
        </node>
        <node id="smoke-picture-text">
            <transform>
                <rotate value="3.14159265359, 0.0, 0.0"/>
                <translate value="5.0, 5.75, 19.99"/>
            </transform>
            <mesh id="smoke-text" shader="regen.models.mesh"/>
        </node>
        <node id="velocity-picture-text">
            <transform>
                <rotate value="3.14159265359, 0.0, 0.0"/>
                <translate value="14.0, 5.75, 19.99"/>
            </transform>
            <mesh id="velocity-text" shader="regen.models.mesh"/>
        </node>
        <node id="mandelbrot-picture-text">
            <transform>
                <rotate value="3.14159265359, 0.0, 0.0"/>
                <translate value="-13.0, 5.75, 19.99"/>
            </transform>
            <mesh id="mandelbrot-text" shader="regen.models.mesh"/>
        </node>
    </node>
</node>

<node id="Update-Pictures">
    <node import="mandelbrot-update"/>
    <node import="fluid-smoke-update"/>
    <node import="fluid-vel-update"/>
</node>

        <!--**************************-->
        <!--***** Statues *****-->
        <!--**************************-->

<mesh id="venus-mesh"
      type="asset"
      asset="venus-asset"
      asset-indices="*"
      asset-animation="0"
      asset-material="0"
      scaling="0.0006,0.0006,0.0006"
      usage="STATIC">
  <material preset="ruby" />
</mesh>
<transform id="venus-tf">
    <translate value="-6.0, 1.4, -13.0" />
</transform>

<mesh id="dragon-mesh"
      type="asset"
      asset="dragon-asset"
      asset-indices="*"
      asset-animation="0"
      asset-material="0"
      scaling="0.15, 0.15, 0.15"
      usage="STATIC">
  <material preset="gold" />
</mesh>
<transform id="dragon-tf">
    <rotate value="0.0,0.0,0.0" />
    <translate value="-0.0, 1.0, -13.0" />
</transform>

<mesh id="bunny-mesh"
      type="asset"
      asset="bunny-asset"
      asset-indices="*"
      asset-animation="0"
      asset-material="0"
      scaling="0.6, 0.6, 0.6"
      usage="STATIC">
  <material preset="jade" />
</mesh>
<transform id="bunny-tf">
    <rotate value="-1.275, 0.0, 0.0"/>
    <translate value="-12.1, 1.2, -11.2" />
</transform>

<mesh id="statue-platform"
      type="box"
      scaling="0.75,1.5,0.75"
      use-normal="1"
      use-tangent="0"
      center="1"
      usage="STATIC">
  <material preset="copper" />
</mesh>
<mesh id="statue-platform-head"
      type="box"
      scaling="0.8,0.1,0.8"
      use-normal="1"
      use-tangent="0"
      center="1"
      usage="STATIC">
  <material preset="pewter" />
</mesh>

<node id="Statues">
    <node id="Venus-Statue">
        <transform id="venus-tf" />
        <mesh id="venus-mesh" shader="regen.models.mesh"/>
    </node>
    <node id="Venus-Platform">
        <node>
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="-6.0, -0.5, -13.0"/>
            </transform>
            <mesh id="statue-platform" shader="regen.models.mesh"/>
        </node>
        <node>
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="-6.0, 0.901, -13.0"/>
            </transform>
            <mesh id="statue-platform-head" shader="regen.models.mesh"/>
        </node>
    </node>

    <node id="Dragon-Statue">
        <transform id="dragon-tf" />
        <mesh id="dragon-mesh" shader="regen.models.mesh"/>
    </node>
    <node id="Dragon-Platform">
        <node>
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="-0.0, -0.5, -13.0"/>
            </transform>
            <mesh id="statue-platform" shader="regen.models.mesh"/>
        </node>
        <node>
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="-0.0, 0.901, -13.0"/>
            </transform>
            <mesh id="statue-platform-head" shader="regen.models.mesh"/>
        </node>
    </node>

    <node id="Bunny">
        <transform id="bunny-tf" />
        <mesh id="bunny-mesh" shader="regen.models.mesh"/>
    </node>
    <node id="Bunny-Statue">
        <node>
            <transform>
                <rotate value="0.75, 0.0, 0.0"/>
                <translate value="-12.0,-0.5,-11.0"/>
            </transform>
            <mesh id="statue-platform" shader="regen.models.mesh"/>
        </node>
        <node>
            <transform>
                <rotate value="0.75, 0.0, 0.0"/>
                <translate value="-12.0, 0.901, -11.0"/>
            </transform>
            <mesh id="statue-platform-head" shader="regen.models.mesh"/>
        </node>
    </node>
</node>


        <!--**************************-->
        <!--***** Shadow Mapping *****-->
        <!--**************************-->

<fbo id="room-light-shadow0"
     target="TEXTURE_CUBE_MAP"
     sampler-type="samplerCube"
     size-mode="abs" size="2048,2048,6">
    <depth pixel-size="24" pixel-type="FLOAT"
           wrapping="CLAMP_TO_EDGE"
           min-filter="NEAREST" mag-filter="NEAREST"
           compare-mode="COMPARE_R_TO_TEXTURE"
           compare-function="LEQUAL"
           sampler-type="samplerCubeShadow"/>
</fbo>

<camera id="room-light-camera0" light="room-light0"
        camera="main-camera" near="0.4" far="40.0"/>

<node id="Shadow-Pass">
    <cull mode="FRONT"/>
    <define key="OUTPUT_TYPE" value="DEPTH"/>

    <node id="Room-Light-Shadow">
        <node id="Room-Light-Shadow0">
            <fbo id="room-light-shadow0" clear-depth="1"/>
            <camera id="room-light-camera0"/>
            <polygon offset-fill="1.1,4.0" />
            <node import="Shadow-Caster"/>
        </node>
    </node>
</node>

        <!--**************************-->
        <!--***** Object Picking *****-->
        <!--**************************-->

<node id="Picking-Pass">
    <camera id="main-camera" />
    <depth test="0" write="0" />
    <fbo id="SCREEN"/>
    <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
    <picking type="geom" camera="main-camera">
        <node name="video-picture">
            <texture name="colorTexture" id="video-texture" map-to="COLOR"/>
            <transform id="video-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh" gs="regen.states.picking.geom" />
        </node>
        <node name="smoke-picture">
            <texture name="colorTexture" fbo="fluid-smoke-output" attachment="0" map-to="COLOR"/>
            <transform id="smoke-picture-tf" />
            <mesh id="picture-canvas" shader="regen.models.mesh" gs="regen.states.picking.geom" />
        </node>
    </picking>
</node>

        <!--**************************-->
        <!--**************************-->

<node id="Shadow-Caster">
    <node import="Statues"/>
</node>

<node id="Scene-Geometry">
    <node id="Ground">
        <!--
        <input type="float" name="reliefScale" value="0.03" />
        <input type="int" name="reliefLinearSteps" value="10" />
        <input type="int" name="reliefBinarySteps" value="2" />
        <texture name="colorTexture" id="ground-color" map-to="COLOR" texco-transfer="RELIEF" />
        <texture name="normalTexture" id="ground-normal" map-to="NORMAL" texco-transfer="RELIEF"
             texel-transfer-key="regen.states.textures.normalTBNTransfer" />
        <texture name="heightTexture" id="ground-height" />
        -->
        <texture name="colorTexture" id="ground-color" map-to="COLOR"/>
        <texture name="normalTexture" id="ground-normal" map-to="NORMAL"/>
        <material ambient="0.3,0.3,0.3" diffuse="0.7,0.7,0.7"/>
        <mesh id="ground-mesh" shader="regen.models.mesh"/>
    </node>
    <node import="Pictures"/>

    <node id="Walls">
        <texture name="colorTexture" id="wall-color" map-to="COLOR"/>
        <texture name="normalTexture" id="wall-normal" map-to="NORMAL"/>
        <node id="Wall-East">
            <transform>
                <rotate value="0.0,0.0,1.5707963"/>
                <translate value="0.0,3.0,20.5"/>
            </transform>
            <mesh id="wall" shader="regen.models.mesh"/>
        </node>
        <node id="Wall-West">
            <transform>
                <rotate value="0.0,3.14,1.5707963"/>
                <translate value="0.0,3.0,-20.5"/>
            </transform>
            <mesh id="wall" shader="regen.models.mesh"/>
        </node>
        <node id="Wall-North">
            <transform>
                <rotate value="1.5707963,0.0,0.0"/>
                <rotate value="0.0,0.0,3.14"/>
                <rotate value="0.0,1.5707963,0.0"/>
                <translate value="20.5,3.0,0.0"/>
            </transform>
            <mesh id="wall" shader="regen.models.mesh"/>
        </node>
    </node>

    <node id="Bars">
        <texture name="colorTexture" id="wood-color" map-to="COLOR"/>

        <node id="box-wall0">
            <transform>
                <translate value="0.5,-2.0,20.5"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall1">
            <transform>
                <translate value="0.5,-2.0,-20.5"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall2">
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="20.0,-2.0,0.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node>
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <translate value="-21.0,-2.0,0.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall3">
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="-20.5,8.5,00.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall3.1">
            <transform>
                <rotate value="1.57079632,0.0,0.0"/>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="20.5,8.5,0.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall3.2">
            <transform>
                <rotate value="1.57079632,0.0,1.57079632"/>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="0.0,8.5,20.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall3.3">
            <transform>
                <rotate value="1.57079632,0.0,1.57079632"/>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="0.0,8.5,-20.0"/>
            </transform>
            <mesh id="box-wall" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall5">
            <transform>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="-20.5,3.0,20.5"/>
            </transform>
            <mesh id="box-wall-1" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall6">
            <transform>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="-20.5,3.0,-20.5"/>
            </transform>
            <mesh id="box-wall-1" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall7">
            <transform>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="20.5,3.0,20.5"/>
            </transform>
            <mesh id="box-wall-1" shader="regen.models.mesh"/>
        </node>
        <node id="box-wall7">
            <transform>
                <rotate value="0.0,1.57079632,0.0"/>
                <translate value="20.5,3.0,-20.5"/>
            </transform>
            <mesh id="box-wall-1" shader="regen.models.mesh"/>
        </node>
    </node>
</node>

<node id="Shading-Pass">
    <blend mode="add"/>
    <depth test="0" write="0"/>
    <input type="vec3" name="lightAmbient" value="0.06,0.04,0.04"/>

    <node id="Ambient-Shading">
        <fullscreen-pass shader="regen.shading.deferred.ambient"/>
    </node>
    <node id="Light-Shading">

        <light-pass type="POINT" shader="regen.shading.deferred.point">
            <light id="room-light0"
                   shadow-buffer="room-light-shadow0" shadow-attachment="depth"
                   shadow-camera="room-light-camera0"/>
        </light-pass>

        <light-pass type="SPOT" shader="regen.shading.deferred.spot">
            <light id="picture-spot-center"/>
            <light id="picture-spot-center-n"/>
            <light id="picture-spot-left"/>
            <light id="picture-spot-right"/>
        </light-pass>
    </node>

    <node import="Ambient-Occlusion-Update"/>
    <node import="Ambient-Occlusion-Sample"/>
</node>

<node id="Background-Pass0">
</node>
<node id="Background-Pass">
    <node import="Reflectors"/>
</node>

        <!--**************************-->
        <!--**************************-->

<node id="Volumetric-Fog-Pass">
    <input type="float" name="shadowSampleStep" value="0.025"/>
    <input type="float" name="shadowSampleThreshold" value="0.075"/>
    <input type="vec2" name="fogDistance" value="0.0,100.0"/>

    <node>
        <input type="float" name="fogExposure" value="1.0"/>
        <input type="vec2" name="fogRadiusScale" value="0.44,0.76"/>
        <input type="vec2" name="fogConeScale" value="1.0,1.0"/>
        <light-pass type="SPOT" shader="regen.shading.fog.volumetric.spot">
            <light id="picture-spot-center"/>
            <light id="picture-spot-center-n"/>
            <light id="picture-spot-left"/>
            <light id="picture-spot-right"/>
        </light-pass>
    </node>
</node>

<node id="Post-Pass">
    <depth test="0" write="0"/>

    <node id="Volume-Fog">
        <fbo id="g-buffer" draw-buffers="1"/>
        <blend mode="add"/>
        <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
        <node import="Volumetric-Fog-Pass"/>
    </node>
    <view id="Scene with Volumetric Fog">
        <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
    </view>

    <node import="FXAA">
        <fbo id="g-buffer" draw-buffers="0"/>
        <texture name="inputTexture" fbo="g-buffer" attachment="1"/>
    </node>
    <view id="Antialiased Scene">
        <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
    </view>
</node>

        <!--**************************-->
        <!--**************************-->

<!--
<node id="animations">
  <deformation mesh-id="venus-mesh" friction="7.9" frequency="5.0" repeat="true">
    <interpolations>
        <interpolation target="pos" function="elastic" />
        <interpolation target="nor" function="elastic" />
    </interpolations>
    <frames>
      <frame duration="2.5" shape="sphere" offset="0.0,-0.8,0.0" />
      <frame duration="2.5" shape="original" />
    </frames>
  </deformation>
  <deformation mesh-id="dragon-mesh" friction="7.9" frequency="1.0" repeat="true">
    <interpolations>
        <interpolation target="pos" function="elastic" />
        <interpolation target="nor" function="elastic" />
    </interpolations>
    <frames>
      <frame duration="2.0" shape="sphere" offset="0.0,-0.2,0.0" />
      <frame duration="2.0" shape="original" />
    </frames>
  </deformation>
</node>
-->

        <!--**************************-->
        <!--**************************-->

<node id="root">
    <node id="Pre-Render">
        <node import="Update-Pictures"/>
        <node import="Reflection-Pass"/>
        <node import="Shadow-Pass"/>

        <view id="Shadow-Map">
            <fbo id="SCREEN"/>
            <texture name="cubeTexture" fbo="room-light-shadow0" attachment="depth"/>
            <fullscreen-pass shader="regen.filter.sampling.cube-shadow-unfold"/>
        </view>
    </node>

    <node id="Render">
        <fbo id="g-buffer" clear-buffers="0,1,2,3" clear-depth="1"/>

        <node import="Default-Pipeline"/>
        <node import="Picking-Pass"/>
        <node import="GUI-Pass">
            <fbo id="g-buffer" draw-buffers="0"/>
        </node>

        <view id="Output Rendering">
            <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
        </view>
    </node>

</node>
