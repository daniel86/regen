<?xml version="1.0" encoding="UTF-8" ?>

<node>

    <include xml-file="scene-display/examples/templates/default.xml"/>

    <node id="configuration">
        <animation id="dwarf-asset" type="asset" idle="idle2">
            <key-mapping key=" " press="jumpSpot"/>
            <key-mapping key="C" press="crouch" idle="crouchLoop" toggle="1"/>
            <key-mapping key="W" press="walk" interrupt="1" release-interrupt="1"/>
            <key-mapping key="A" press="walk" interrupt="1" release-interrupt="1"/>
            <key-mapping key="S" press="walk" interrupt="1" release-interrupt="1" backwards="1"/>
            <key-mapping key="D" press="walk" interrupt="1" release-interrupt="1"/>
            <mouse-mapping button="1" press="attack1"/>
            <mouse-mapping button="2" press="block"/>
        </animation>
        <camera id="main-camera"
                mode="third-person"
                type="physical-character"
                step-height="0.9"
                max-slope="0.8"
                collision-radius="0.9"
                collision-height="3.9"
                gravity-force="50.0"
                jump-velocity="26.0"
                speed="0.4"
                mesh="dwarf-mesh"
                mesh-index="1"
                mesh-distance="20.0"
                mesh-horizontal-orientation="3.14159265359"
                vertical-orientation="0.16"
                transform="dwarf-tf"
                eye-offset="0.0,2.75,0.0">
            <key-mapping key="W" command="move_forward"/>
            <key-mapping key="A" command="move_left"/>
            <key-mapping key="S" command="move_backward"/>
            <key-mapping key="D" command="move_right"/>
            <key-mapping key=" " command="jump"/>
            <key-mapping key="C" command="crouch"/>
        </camera>
    </node>

    <!-- FBOs -->
    <fbo id="g-buffer"
         size-mode="rel" size="1.0,1.0"
         pixel-type="UNSIGNED_BYTE"
         pixel-size="16"
         pixel-components="4">
        <texture id="diffuse0"/>
        <texture id="diffuse1"/>
        <texture id="specular"/>
        <texture id="normal"/>
        <texture id="emission" pixel-components="3"/>
        <depth id="depth" pixel-size="24"/>
    </fbo>
    <!-- Textures -->
    <texture id="emission-map-bloom" type="bloom" num-mips="4" input-fbo="g-buffer"/>
    <texture id="ground-color" file="res/textures/materials/grass/0/ground.png"/>
    <texture id="ground-normal" file="res/textures/brick/normal.jpg"/>
    <texture id="ground-height" file="res/textures/brick/height.jpg"/>
    <texture id="glow-map" file="res/textures/glow-map.tga" wrapping="CLAMP_TO_EDGE"/>
    <texture id="sand" file="res/textures/materials/sand.jpg"/>
    <!-- Spatial Index -->
    <index id="main-index" type="quadtree" max-objects-per-node="4"/>
    <!-- Cameras -->
    <camera id="main-camera"
            culling-index="main-index"
            fov="45.0" near="0.1" far="200.0"
            position="25.0,2.5,2.0"
            direction="1.0,0.0,-1.0"/>

    <!--**************************-->
    <!--******* Character ********-->
    <!--**************************-->

    <mesh id="dwarf-mesh" type="asset" asset="dwarf-asset" asset-indices="*" asset-animation="1">
        <transform id="dwarf-tf">
            <rotate value="1.5707963,0.0,0.0"/>
            <translate value="3.0,0.1,-40.0"/>
        </transform>
    </mesh>

    <!--**************************-->
    <!--********* Ground *********-->
    <!--**************************-->

    <mesh id="ground-mesh" type="rectangle" use-normal="1" use-texco="1" center="1" usage="STATIC" lod="4"
          rotation="0.0,0.0,3.1415"
          scaling="400.0,20.0,400.0"
          texco-scaling="20.0,20.0">
        <transform id="ground-tf">
            <translate value="0.0,-2.0,0.0"/>
        </transform>
    </mesh>

    <!--**************************-->
    <!--********* Trees *********-->
    <!--**************************-->

    <mesh id="tree-mesh" type="proctree" preset="fir" >
        <transform id="tree-tf">
            <scale value="4.0, 4.0, 4.0"/>
            <rotate value="1.5707963,0.0,0.0"/>
            <translate value="8.0,-2.0, -8.0"/>
        </transform>
        <shape id="tree-shape" mode="index" type="aabb" mesh-id="tree-mesh" transform-id="tree-tf">
            <has-part mesh-id="tree-mesh" mesh-index="1" />
        </shape>
        <!-- FIXME: there is some hack around here, look at bullet shape it is not at correct height.
                 probably because base of the mesh is at 0.0,0.0,0.0, and not its center.
                 plus there is a scaling here too. -->
        <shape id="tree-mesh-physics" mode="physics" shape="box" mass="0.0" size="0.6, 6.0, 0.6"
            mesh-id="tree-mesh" transform-id="tree-tf"/>
    </mesh>

    <mesh id="tree-pot" type="torus"
            lod-levels="3, 2, 1"
            use-normal="1" use-tangent="1" center="1"
            usage="STATIC" scaling="3.0, 3.0, 3.0" texco-scaling="3.0, 1.0"
            ring-radius="1.0" tube-radius="0.2">
        <transform id="tree-pot-tf">
            <translate value="8.0, -1.4, -8.0"/>
        </transform>
        <shape id="tree-pot-shape" mode="index" type="aabb"
            mesh-id="tree-pot" transform-id="tree-pot-tf">
            <has-part mesh-id="tree-disc"/>
        </shape>
        <shape id="tree-pot-physics" mode="physics" shape="cylinder" mass="0.0" size="7.2,1.2,7.2"
            mesh-id="tree-pot" transform-id="tree-pot-tf"/>
        <material preset="stone" color-blend-mode="MUL" emission="0.04, 0.04, 0.04"/>
    </mesh>

    <mesh id="tree-disc" type="disc"
            lod-levels="2, 1, 0"
            use-normal="1" center="1" usage="STATIC" scaling="3.0, 3.0, 3.0"
            texco-scaling="0.1, 0.1" disc-radius="1.0">
        <transform id="tree-disc-tf">
            <translate value="8.0, -1.0, -8.0"/>
        </transform>
    </mesh>

    <node id="Trees">
        <node id="tree1" cull-shape="tree-shape">
            <node id="tree1-trunk">
                <input name="matEmission" type="vec3" value="0.01,0.01,0.01"/>
                <mesh id="tree-mesh" mesh-index="0" shader="regen.models.mesh"/>
            </node>
            <node id="tree1-twig">
                <define key="DISCARD_ALPHA" value="TRUE"/>
                <define key="DISCARD_ALPHA_THRESHOLD" value="0.25"/>
                <input name="matEmission" type="vec3" value="0.01,0.06,0.01"/>
                <!-- transform mesh in geometry shader -->
                <define key="HAS_GS_TRANSFORM" value="TRUE"/>
                <texture name="windFlow" id="wind-flowmap" />
                <input name="stiffness" type="float" value="0.5"/>
                <!-- draw the mesh -->
                <mesh id="tree-mesh" mesh-index="1" shader="regen.models.mesh" gs="regen.states.wind.wavingQuad"/>
            </node>
        </node>
        <node id="tree1-pot" cull-shape="tree-pot-shape">
            <node id="tree1-pot">
                <mesh id="tree-pot" shader="regen.models.mesh" />
            </node>
            <node id="tree1-pot-disc">
                <texture id="sand" map-to="color" blend-mode="SRC"/>
                <material ambient="0.1, 0.1, 0.1" specular="0.0, 0.0, 0.0"/>
                <mesh id="tree-disc" shader="regen.models.mesh" />
            </node>
        </node>
    </node>

    <!--**************************-->
    <!--********* Other Garden Stuff *********-->
    <!--**************************-->

    <texture id="grass-color" file="res/textures/materials/grass/0/color.png" wrapping="CLAMP_TO_EDGE" />
    <texture id="wind-flowmap" file="res/textures/wind/flowmap0.png" wrapping="REPEAT"/>
    <texture id="wind-noise" noise="cloud" size="128.0,128.0,1.0" swizzle-g="RED" swizzle-b="RED"/>

    <node id="Grass">
        <node id="grass1">
            <!-- TODO: the grass alpha discard is super slow!
                some ideas to improve:
                - use better texture without much alpha.
                - make patches and sort them by distance to camera,
                  that should reduce overdraw.
                - maybe see if tessellation can produce sorted results.
            -->
            <!-- <input type="vec4" name="clipPlane" value="0.0,1.0,0.0,-2.0" /> -->
            <!-- <toggle key="MULTISAMPLE" value="1" /> -->
            <define key="DISCARD_ALPHA" value="TRUE"/>
            <blend mode="SRC"/>
            <define key="TESS_SPACING" value="equal_spacing"/>
            <tesselation num-patch-vertices="3" lod-factor="0.4" lod-metric="EDGE_DEVICE_DISTANCE" />
            <input name="lodMinDeviceDistance" type="float" value="0.1"/>
            <input name="lodMaxDeviceDistance" type="float" value="0.5"/>
            <input name="minTessLevel" type="float" value="1.0"/>
            <input name="maxTessLevel" type="float" value="60.0"/>
            <!-- use more complex geometry in close range. -->
            <define key="USE_SPRITE_LOD" value="TRUE"/>
            <input name="lodGeomLevel0" type="float" value="60.0"/>
            <input name="lodGeomLevel1" type="float" value="160.0"/>
            <input name="lodGeomBrightness0" type="float" value="1.7"/>
            <input name="lodGeomVariance" type="float" value="6.0"/>
            <!-- size and position -->
            <input name="quadSize" type="vec2" value="1.15, 0.3"/>
            <input name="posVariation" type="float" value="0.4"/>
            <input name="offset" type="vec3" value="0.0, -0.2, 0.0"/>
            <!-- color -->
            <texture id="grass-color" map-to="color" blend-mode="mul" />
            <input name="uvDarken" type="float" value="0.25"/>
            <!-- wind -->
            <texture name="windFlow" id="wind-flowmap" />
            <input name="stiffness" type="float" value="1.0"/>
            <!-- small-scale wind details -->
            <texture name="windNoise" id="wind-noise" />
            <input name="windNoiseScale" type="float" value="100.0"/>
            <input name="windNoiseSpeed" type="float" value="1.0"/>
            <input name="windNoiseStrength" type="float" value="0.1"/>
            <!-- collision with player -->
            <input name="colliderModelMat" state="dwarf-tf" component="modelMatrix" />
            <input name="colliderRadius" type="float" value="4.4"/>
            <input name="colliderStrength" type="float" value="0.7"/>
            <material
                diffuse="1.5, 1.5, 1.5"
                ambient="0.1, 0.1, 0.1"
                specular="0.0, 0.0, 0.0"
                shininess="256.0"
                emission="0.0, 0.02, 0.0"/>
            <mesh id="ground-mesh" primitive="patches" shader="regen.models.grass.patch"/>
        </node>
    </node>

    <mesh id="stone0" type="sphere" use-normal="1" use-texco="1" use-tangent="1" usage="STATIC"
            lod-levels="4, 3, 2" scaling="1.5,3.0,3.0" num-instances="20">
        <transform id="stone0-tf" num-instances="20" is-instanced="1">
            <rotate value="0.0, 1.57079632, 0.0" />
            <translate value="0.0, -0.6, 0.0" />
            <set mode="circle" target="translate" radius="42.0" variance="0.8"
                dir-x="1.0, 0.0, 0.0" dir-z="0.0, 0.0, 1.0"/>
        </transform>
        <material preset="stone" variant="0" max-offset="0.2" />
        <shape id="stone0-shape" mode="index" type="sphere"
            mesh-id="stone0" transform-id="stone0-tf" radius="1.6" />
        <shape id="stone0-physics" mode="physics"
            mesh-id="stone0" transform-id="stone0-tf" shape="capsule" radius="1.0" height="0.4" mass="2.0" />
    </mesh>

    <node id="Garden-Items">
        <node import="Trees"/>
        <node id="Stone0" cull-shape="stone0-shape">
            <mesh id="stone0" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--********* Stairs *********-->
    <!--**************************-->

    <mesh id="stairs0-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="8.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs0-tf">
            <translate value="16.0,-1.47,16.0"/>
        </transform>
        <shape id="stairs0-shape" mode="index" type="aabb"
            mesh-id="stairs0-mesh" transform-id="stairs0-tf" />
        <shape id="stairs0-physics" mode="physics"
            mesh-id="stairs0-mesh" transform-id="stairs0-tf" shape="box" mass="0.0" size="16.0,0.8,8.0"/>
    </mesh>

    <mesh id="stairs1-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="6.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs1-tf">
            <translate value="16.0,-0.67,16.0"/>
        </transform>
        <shape id="stairs1-shape" mode="index" type="aabb"
            mesh-id="stairs1-mesh" transform-id="stairs1-tf" />
        <shape id="stairs1-physics" mode="physics"
            mesh-id="stairs1-mesh" transform-id="stairs1-tf" shape="box" mass="0.0" size="12.0,0.8,8.0"/>
    </mesh>

    <mesh id="stairs2-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="4.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs2-tf">
            <translate value="16.0,0.13,16.0"/>
        </transform>
        <shape id="stairs2-shape" mode="index" type="aabb"
            mesh-id="stairs2-mesh" transform-id="stairs2-tf" />
        <shape id="stairs2-physics" mode="physics"
            mesh-id="stairs2-mesh" transform-id="stairs2-tf" shape="box" mass="0.0" size="8.0,0.8,8.0"/>
    </mesh>

    <node id="Stairs">
        <material preset="steel" variant="0"/>
        <!-- <material preset="stone" height-map-mode="parallax_occlusion" max-offset="0.2"/> -->
        <node id="stairs0" cull-shape="stairs0-shape">
            <mesh id="stairs0-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="stairs1" cull-shape="stairs1-shape">
            <mesh id="stairs1-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="stairs2" cull-shape="stairs2-shape">
            <mesh id="stairs2-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--******** Platforms *******-->
    <!--**************************-->

    <mesh id="platform0-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
          scaling="4.0,0.4,4.0"
          texco-scaling="0.5,0.5">
        <transform id="platform0-tf">
            <translate value="16.0,3.0,-16.0"/>
            <animation type="key-frames" mesh-id="platform0-mesh" dt="2.5">
                <key-frame position="16.0,3.0,8.0"/>
                <key-frame position="16.0,3.0,-16.0"/>
            </animation>
        </transform>
        <shape id="platform0-shape" mode="index" type="aabb"
            mesh-id="platform0-mesh" transform-id="platform0-tf" />
        <shape id="platform0-physics" mode="physics"
            mesh-id="platform0-mesh" transform-id="platform0-tf"
            shape="box" mass="0.0" gravity="0.0, 0.0, 0.0" friction="20.0"
            size="8.0,0.8,8.0"/>
    </mesh>

    <mesh id="platform1-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
          scaling="4.0,0.4,4.0"
          texco-scaling="0.5,0.5">
        <transform id="platform1-tf">
            <translate value="8.0,7.0,-16.0"/>
            <animation type="key-frames" mesh-id="platform1-mesh" dt="2.5">
                <key-frame position="-20.0,7.0,-16.0"/>
                <key-frame position="8.0,7.0,-16.0"/>
            </animation>
        </transform>
        <shape id="platform1-shape" mode="index" type="aabb"
            mesh-id="platform1-mesh" transform-id="platform1-tf" />
        <shape id="platform1-physics" mode="physics"
            mesh-id="platform1-mesh" transform-id="platform1-tf"
            shape="box" mass="0.0" gravity="0.0, 0.0, 0.0" friction="20.0"
            size="8.0,0.8,8.0"/>
    </mesh>

    <node id="Platforms">
        <material preset="iron" emission="0.05,0.07,0.07" />
        <node id="platform0" cull-shape="platform0-shape">
            <mesh id="platform0-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="platform1" cull-shape="platform1-shape">
            <mesh id="platform1-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--**************************-->

    <mesh id="pedestal-mesh" type="box"
            lod-levels="3, 2, 0" lod-far="100.0"
            use-normal="1" use-tangent="1" center="1" usage="STATIC"
            scaling="3.5,5.0,3.5" texco-scaling="0.25, 0.25">
        <transform id="pedestal-tf">
            <rotate value="1.57079632,0.0,0.0"/>
            <translate value="-16.0, 3.0, -3.0"/>
        </transform>
        <shape id="pedestal-shape" mode="index" type="aabb"
            mesh-id="pedestal-mesh" transform-id="pedestal-tf" />
        <shape id="pedestal-physics" mode="physics"
            mesh-id="pedestal-mesh" transform-id="pedestal-tf"
            shape="box" size="7.0, 10.0, 7.0" mass="0.0"/>
        <material preset="wood" variant="1" color-blend-mode="mul"
            diffuse="0.9, 0.8, 0.7"/>
    </mesh>

    <mesh id="slope-mesh" type="box" use-normal="1" use-texco="1" use-tangent="1" center="1"
          usage="STATIC" lod="0" rotation="0.0,0.0,0.0" scaling="3.5,0.04,9.0" texco-scaling="0.25, 0.25">
        <transform id="slope-tf">
            <rotate value="0,0, -0.6, 0.0"/>
            <translate value="-16.0, 3.0, 7.9"/>
        </transform>
        <shape id="slope-shape" mode="index" type="obb"
            mesh-id="slope-mesh" transform-id="slope-tf" />
        <shape id="slope-physics" mode="physics"
            mesh-id="slope-mesh" transform-id="slope-tf" shape="box" size="7,0.08,18" mass="0.0"/>
        <material preset="wood" variant="0" color-blend-mode="mul" diffuse="0.5, 0.65, 0.75" />
    </mesh>

    <node id="Pedestal">
        <node id="pedestal" cull-shape="pedestal-shape">
            <mesh id="pedestal-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="statue-slope" cull-shape="slope-shape">
            <mesh id="slope-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--***** Particles etc. *****-->
    <!--**************************-->

    <!--
    <texture id="fire-noise" file="res/textures/fire/noise.png" wrapping="REPEAT"/>
    <texture id="fire-color" file="res/textures/fire/color.png" wrapping="CLAMP_TO_EDGE"/>

    <mesh id="fire-sprite" type="point" usage="STATIC">
        <transform>
            <translate value="-16.0, 12.0, -3.0"/>
        </transform>
    </mesh>

    <node id="Fire">
        <blend mode="alpha"/>
        <define key="DISCARD_ALPHA" value="TRUE"/>
        <input type="vec2" name="spriteSize" value="8.0, 8.0"/>
        <texture id="fire-noise" name="fireNoiseTexture"/>
        <texture id="fire-color" map-to="COLOR" blend="SRC"
            texco-transfer-key="regen.models.sprite.fireTransfer1"/>
        <mesh id="fire-sprite" shader="regen.models.sprite"/>
    </node>
    -->

    <!-- A FBO with density and color attachments. -->
    <fbo id="particle-fbo" size-mode="rel" size="0.25, 0.25"
            pixel-type="FLOAT" pixel-size="24">
        <texture id="density" pixel-components="1" />
        <texture id="color" pixel-components="4" />
    </fbo>
    <fbo id="particle-depth" size-mode="rel" size="0.25, 0.25"
            pixel-type="UNSIGNED_BYTE">
        <depth id="depth" pixel-size="24" />
    </fbo>

    <texture id="particle-splat" file="res/textures/splats/flare.jpg"/>
    <texture id="particle-color-ramp" ramp="inline" format="RGB">
        <texel v="255, 255, 20"/>
        <texel v="250, 60, 20"/>
        <texel v="230, 40, 20"/>
        <texel v="160, 20, 8"/>
        <texel v="0, 0, 0"/>
        <texel v="0, 0, 0"/>
    </texture>

    <ubo id="Particles-UBO">
        <uniform type="vec3" name="gravity" value="0.0,9.81,0.0"/>
        <uniform type="float" name="dampingFactor" value="1.0"/>
        <uniform type="vec3" name="emitterPosition" value="0.0, -0.5, 0.0"/>
        <uniform type="float" name="emitterSize" value="9.0"/>
        <uniform type="vec2" name="velocityFactorMinMax" value="5.0, 10.0"/>
        <uniform type="float" name="emitterOpening" value="0.5"/>
        <uniform type="float" name="surfaceHeight" value="-1.0"/>
        <uniform type="float" name="lifetimeDefault" value="0.8"/>
        <uniform type="float" name="lifetimeVariance" value="0.5"/>
    </ubo>

    <ubo id="Wind-UBO">
        <uniform name="wind" type="vec2" value="0.6, 0.6"/>
        <uniform name="windFlowScale" type="float" value="150.0"/>
        <uniform name="windFlowTime" type="float" value="0.2"/>
        <uniform name="windStrength" type="float" value="1.0"/>
    </ubo>

    <node id="Particle-Config">
        <define key="PARTICLE_EMITTER_MODE" value="IN"/>
        <define key="PARTICLE_EMITTER_SHAPE" value="DISC"/>
        <define key="OPACITY_WEIGHTED_COLOR" value="TRUE"/>
        <input name="Particles" ubo="Particles-UBO"/>
        <input name="Wind" ubo="Wind-UBO"/>
        <texture name="windFlow" id="wind-flowmap" />
    </node>

    <mesh id="test-particles1" type="particles" num-vertices="800" max-emits="10" animation-state="Particle-Config">
        <!-- Add particle attributes. -->
        <input type="vec3" name="pos" is-attribute="1"/>
        <input type="vec3" name="velocity" is-attribute="1"/>
        <input type="float" name="mass" is-attribute="1" default="1.4" variance="0.4"/>
        <input type="float" name="size" is-attribute="1" default="0.1" variance="0.05" advance-mode="ADD" advance-constant="2.0"/>
        <transform id="platform1-tf" />
    </mesh>

    <mesh id="test-particles0" type="particles" num-vertices="800" max-emits="10" animation-state="Particle-Config">
        <!-- Add particle attributes. -->
        <input type="vec3" name="pos" is-attribute="1"/>
        <input type="vec3" name="velocity" is-attribute="1"/>
        <input type="float" name="mass" is-attribute="1" default="1.4" variance="0.4"/>
        <input type="float" name="size" is-attribute="1" default="0.1" variance="0.05" advance-mode="ADD" advance-constant="2.0"/>
        <transform id="platform0-tf" />
        <!-- TODO: add a bounding shape for particles. -->
        <!--
        <shape id="particles0-aabb" mode="index" type="aabb"
            mesh-id="test-particles0" />
        -->
    </mesh>

    <node id="Particle-Update-FBO">
        <define key="USE_SOFT_PARTICLES" value="TRUE"/>
        <define key="USE_NEAR_CAMERA_SOFT_PARTICLES" value="FALSE"/>
        <depth test="0" write="0" />

        <!-- downsample g-buffer depth to particle-fbo size.
             note: we can also test against g-buffer depth, but
             there might be halos around objects with particles. -->
        <!--
        <node id="Particle-Depth-Downsample">
            <depth test="1" write="1" />
            <fbo id="particle-depth" clear-depth="1" />
            <texture name="inputTexture" fbo="g-buffer" attachment="depth" />
            <fullscreen-pass shader="regen.filter.sampling.downsample.depth"/>
        </node>
        <view id="Particle-Depth">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" fbo="particle-depth" attachment="depth" />
            <fullscreen-pass shader="regen.filter.sampling.depth"/>
        </view>
        -->

        <node id="Particle-Density">
            <fbo id="particle-fbo" clear-buffers="0" draw-buffers="0" />
            <!-- TODO: there is a halo around objects, maybe it can be avoided with downsamled depth
                       but first attempt did not have an effect for some reason. -->
            <!--
            <texture name="depthTexture" fbo="particle-depth" attachment="depth"/>
            -->
            <texture name="depthTexture" fbo="g-buffer" attachment="depth"/>
            <texture name="splatTexture" id="particle-splat" map-to="ALPHA" blend-mode="MUL"/>
            <blend mode="add"/>
            <input type="float" name="softParticleScale" value="30.0"/>
            <input type="float" name="lifetimeSmoothstep" value="1.0"/>
            <node id="Particle-Density0">
                <mesh id="test-particles0" shader="regen.particles.sprite.density"/>
            </node>
            <node id="Particle-Density1">
                <mesh id="test-particles1" shader="regen.particles.sprite.density"/>
            </node>
        </node>

        <node id="Particle-Color">
            <define key="DISCARD_DENSITY_THRESHOLD" value="0.01"/>
            <fbo id="particle-fbo" clear-buffers="1" draw-buffers="1" />
            <blend mode="alpha" />
            <texture name="densityTexture" fbo="particle-fbo" attachment="0" />
            <texture name="colorRamp" id="particle-color-ramp" blend-mode="MUL" />
            <texture name="windFlow" id="wind-flowmap" />
            <input type="float" name="gamma" value="1.0"/>
            <input type="float" name="exposure" value="1.0"/>
            <input type="float" name="brightness" value="1.0"/>
            <input type="vec4" name="color" value="1.0, 1.0, 1.0, 1.0" />
            <fullscreen-pass shader="regen.particles.sprite.densityColor" />
        </node>
        <view id="Particle-Density">
            <blit src-fbo="particle-fbo" src-attachment="0" dst-fbo="SCREEN"/>
        </view>
        <view id="Particle-Color">
            <blit src-fbo="particle-fbo" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
        <view id="Particle-Ramp">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="particle-color-ramp" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>

        <!-- Finally, create a blurred version. -->
        <node id="Particle-Blur">
            <input type="int" name="numBlurPixels" value="9" />
            <input type="float" name="blurSigma" value="2.3" />
            <filter-sequence id="particle-color" fbo="particle-fbo" attachment="1" >
                <filter shader="regen.filter.blur.horizontal" />
                <filter shader="regen.filter.blur.vertical" />
            </filter-sequence>
        </node>
        <view id="Particle-Blur">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="particle-color" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>
    </node>

    <node id="Particle-Draw">
        <blend mode="alpha" />
        <depth test="0" write="0" />
        <texture name="inputTexture" id="particle-color" />
        <define key="IS_2D_TEXTURE" value="TRUE" />
        <fullscreen-pass shader="regen.filter.sampling" />
    </node>

    <!--**************************-->
    <!--********* Shading ********-->
    <!--**************************-->

    <light id="room-light0"
           type="POINT"
           position="-5.0,16.0,0.0"
           radius="30.0,48.0"
           direction="0.0,-1.0,0.0"
           diffuse="0.8,0.9,0.835"
           ambient="0.6,0.6,0.6"/>

    <camera id="room-light-camera0"
            culling-index="main-index"
            light="room-light0"
            camera="main-camera"/>

    <fbo id="room-light-shadow0"
         target="TEXTURE_CUBE_MAP"
         sampler-type="samplerCube"
         size-mode="abs" size="1024,1024,6">
        <depth pixel-size="24" pixel-type="FLOAT"
               wrapping="CLAMP_TO_EDGE"
               min-filter="NEAREST" mag-filter="NEAREST"
               compare-mode="COMPARE_R_TO_TEXTURE"
               compare-function="LEQUAL"
               sampler-type="samplerCubeShadow"/>
    </fbo>

    <mesh id="light-bulb-point" type="point" usage="STATIC" num-vertices="1" >
        <material diffuse="0.0, 0.0, 0.0" ambient="0.0, 0.0, 0.0" specular="0.0, 0.0, 0.0" shininess="256.0"/>
    </mesh>

    <node id="Shadow-Pass">
        <cull mode="FRONT"/>
        <define key="OUTPUT_TYPE" value="DEPTH"/>

        <node id="Room-Light-Shadow">
            <node id="Room-Light-Shadow0">
                <!-- skip rendering top face of the cube -->
                <define key="SKIP_LAYER2" value="TRUE"/>
                <fbo id="room-light-shadow0" clear-depth="1"/>
                <camera id="room-light-camera0" />
                <node import="Shadow-Caster"/>
            </node>
        </node>
    </node>

    <node id="Shading-Pass">
        <blend mode="add"/>
        <depth test="0" write="0"/>
        <input type="vec3" name="lightAmbient" value="0.3,0.3,0.3"/>
        <resource id="earth-sky"/>

        <node id="Ambient-Shading">
            <fullscreen-pass shader="regen.shading.deferred.ambient"/>
        </node>
        <node id="Light-Shading">
            <light-pass type="DIRECTIONAL" shader="regen.shading.deferred.directional">
                <light id="earth-sky-sun"/>
            </light-pass>
            <light-pass type="POINT" shader="regen.shading.deferred.point">
                <light id="room-light0"
                       shadow-buffer="room-light-shadow0" shadow-attachment="depth"
                       shadow-camera="room-light-camera0"/>
            </light-pass>
        </node>
    </node>

    <!--**************************-->
    <!--********* Objects ********-->
    <!--**************************-->

    <node id="Shadow-Caster">
        <node id="Dwarf">
            <node id="dwarf-body">
                <mesh id="dwarf-mesh" mesh-index-range="1-" shader="regen.models.mesh"/>
            </node>
            <node id="dwarf-axe">
                <mesh id="dwarf-mesh" mesh-index="0" shader="regen.models.mesh"/>
            </node>
        </node>
        <node import="Pedestal"/>
        <node import="Garden-Items"/>
        <node import="Stairs"/>
        <node import="Platforms"/>
    </node>

    <node id="Non-Shadow-Caster">
        <physics mesh-id="ground-mesh" transform-id="ground-tf" shape="triangle-mesh" mass="0.0"/>

        <node import="Grass"/>
        <node id="Ground">
            <texture id="ground-color" map-to="color" blend-mode="SRC" wrapping="REPEAT"/>
            <material specular="0, 0, 0" ambient="0.06, 0.085, 0.06"/>
            <mesh id="ground-mesh" primitive="triangles" shader="regen.models.mesh"/>
        </node>
        <node id="Light-Bulbs">
            <!-- TODO: cull light bulb node, but it uses modelOffset instead of modelMatrix -->
            <node id="Light-Bulb0">
                <input name="sphereRadius" type="float" value="0.5" />
                <input name="modelOffset" state="room-light0" component="lightPosition" />
                <input name="matEmission" state="room-light0" component="lightDiffuse" />
                <mesh id="light-bulb-point" shader="regen.models.sprite-sphere" />
            </node>
        </node>
    </node>

    <node id="Background-Objects">
        <node id="Sky">
            <sky id="earth-sky"/>
        </node>
    </node>

    <!--**************************-->
    <!--**************************-->

    <node id="Post-Pass">
        <depth test="0" write="0"/>
        <!-- blur the g-buffer attachment 1, the output is a named texture "blurred-scene" -->
        <node import="G-Buffer-Blur1"/>
        <!-- apply depth of field effect by mixing the blurred scene with the original scene -->
        <node import="Depth-of-Field">
            <fbo id="g-buffer" draw-buffers="0"/>
            <texture name="inputTexture" fbo="g-buffer" attachment="1"/>
        </node>
        <view id="Depth of Field">
            <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
        </view>
        <!-- render particles into a separate buffer -->
        <node import="Particle-Update-FBO"/>
        <!-- render transparent objects -->
        <node id="Transparent-Pass">
            <fbo id="g-buffer" draw-buffers="0"/>
            <blend mode="add"/>
            <depth test="1" write="0"/>
            <!-- render emission light -->
            <node id="Material-Emission">
                <texture name="gEmissionTexture" fbo="g-buffer" attachment="4"/>
                <texture name="gEmissionBlurred" id="emission-map-bloom"/>
                <!-- <texture name="gEmissionBlurred" id="emission-map-blur" /> -->
                <fullscreen-pass shader="regen.shading.deferred.emission"/>
            </node>
            <!-- render particles -->
            <node import="Particle-Draw" />
            <!-- <node import="Fire" /> -->
            <view id="Transparent Objects">
                <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
            </view>
        </node>
        <!-- apply anti-aliasing effect -->
        <node import="FXAA">
            <fbo id="g-buffer" draw-buffers="1"/>
            <texture name="inputTexture" fbo="g-buffer" attachment="0"/>
        </node>
        <view id="Antialiased Scene">
            <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
    </node>

    <node id="root">
        <input name="Wind" ubo="Wind-UBO"/>

        <node id="Pre-Render">
            <!-- Render shadow maps such that they can be used in the shading pass -->
            <node import="Shadow-Pass">
                <!-- the leafs of the tree have opposing faces very close to each other,
                     so to avoid z-fighting we apply a small offset to all shadow caster. -->
                <polygon offset-fill="1.1,4.0"/>
            </node>
            <view id="Shadow-Map">
                <fbo id="SCREEN"/>
                <texture name="cubeTexture" fbo="room-light-shadow0" attachment="depth"/>
                <fullscreen-pass shader="regen.filter.sampling.cube-shadow-unfold"/>
            </view>
        </node>

        <node id="Render">
            <fbo id="g-buffer" clear-buffers="0,1,2,3,4" clear-depth="1"/>
            <camera id="main-camera" />

            <node id="Geometry-Pass">
                <fbo id="g-buffer" draw-buffers="0,1,2,3,4"/>
                <blend mode="src"/>
                <depth test="1" write="1"/>
                <node import="Shadow-Caster"/>
                <node import="Non-Shadow-Caster"/>
                <view id="G-Buffer: Emission">
                    <blit src-fbo="g-buffer" src-attachment="4" dst-fbo="SCREEN"/>
                </view>
                <node import="G-Buffer-Views"/>
            </node>

            <node id="Post-Geometry">
                <node id="Emission-Update">
                    <input type="float" name="filterRadius" value="0.01"/>
                    <bloom fbo="g-buffer" attachment="4" bloom-texture="emission-map-bloom"/>
                </node>
                <view id="Emission Mips">
                    <fbo id="SCREEN"/>
                    <texture name="inputTexture1" id="emission-map-bloom" mip-level="0"/>
                    <texture name="inputTexture2" id="emission-map-bloom" mip-level="1"/>
                    <texture name="inputTexture3" id="emission-map-bloom" mip-level="2"/>
                    <texture name="inputTexture4" id="emission-map-bloom" mip-level="3"/>
                    <fullscreen-pass shader="regen.filter.sampling.x4"/>
                </view>
                <!--
                <node id="Emission-Blur">
                    <input type="int" name="numBlurPixels" value="4" />
                    <input type="float" name="blurSigma" value="2.0" />
                    <filter-sequence id="emission-map-blur" fbo="g-buffer" attachment="4" >
                        <filter shader="regen.filter.sampling" scale="0.5" />
                        <filter shader="regen.filter.blur.horizontal" />
                        <filter shader="regen.filter.blur.vertical" />
                    </filter-sequence>
                </node>
                -->
            </node>

            <node id="Shading">
                <fbo id="g-buffer" draw-buffers="1"/>
                <node id="Light-Pass">
                    <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
                    <texture name="gDiffuseTexture" fbo="g-buffer" attachment="0"/>
                    <texture name="gSpecularTexture" fbo="g-buffer" attachment="2"/>
                    <texture name="gNorWorldTexture" fbo="g-buffer" attachment="3"/>
                    <node import="Shading-Pass"/>
                </node>
                <view id="Shaded Scene">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
            </node>

            <node id="Post-Shading">
                <node import="Background-Objects"/>
                <view id="Scene with Background">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
                <node import="Post-Pass"/>
            </node>

            <view id="Bullet Debug">
                <node import="bullet-debug">
                    <fbo id="g-buffer" draw-buffers="1"/>
                </node>
                <node>
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </node>
            </view>
            <!--
            <node import="bullet-debug">
                <fbo id="g-buffer" draw-buffers="1"/>
            </node>
            -->
            <view id="Spatial Index">
                <node import="spatial-index-debug">
                    <fbo id="g-buffer" draw-buffers="1"/>
                </node>
                <node>
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </node>
            </view>
            <!--
            <node import="spatial-index-debug">
                <fbo id="g-buffer" draw-buffers="1"/>
            </node>
            -->

            <node import="GUI-Pass">
                <fbo id="g-buffer" draw-buffers="1"/>
            </node>

            <view id="Output Rendering">
                <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
            </view>
        </node>
    </node>
</node>
