<?xml version="1.0" encoding="UTF-8" ?>

<node>

    <include xml-file="scene-display/examples/templates/default.xml"/>

    <node id="configuration">
        <animation id="dwarf-asset" type="asset" idle="idle2">
            <key-mapping key=" " press="jumpSpot"/>
            <key-mapping key="C" press="crouch" idle="crouchLoop" toggle="1"/>
            <key-mapping key="W" press="walk" interrupt="1" release-interrupt="1"/>
            <key-mapping key="A" press="walk" interrupt="1" release-interrupt="1"/>
            <key-mapping key="S" press="walk" interrupt="1" release-interrupt="1" backwards="1"/>
            <key-mapping key="D" press="walk" interrupt="1" release-interrupt="1"/>
            <mouse-mapping button="1" press="attack1"/>
            <mouse-mapping button="2" press="block"/>
        </animation>
        <camera id="main-camera"
                mode="third-person"
                type="physical-character"
                step-height="0.8"
                max-slope="0.8"
                collision-radius="0.9"
                collision-height="3.9"
                gravity-force="50.0"
                jump-velocity="26.0"
                speed="0.0175"
                mesh="dwarf-mesh"
                mesh-index="1"
                mesh-distance="20.0"
                mesh-horizontal-orientation="3.14159265359"
                vertical-orientation="0.4"
                transform="dwarf-tf"
                eye-offset="0.0,2.75,0.0">
            <key-mapping key="W" command="move_forward"/>
            <key-mapping key="A" command="move_left"/>
            <key-mapping key="S" command="move_backward"/>
            <key-mapping key="D" command="move_right"/>
            <key-mapping key=" " command="jump"/>
            <key-mapping key="C" command="crouch"/>
        </camera>
    </node>

    <!-- FBOs -->
    <fbo id="g-buffer"
         size-mode="rel" size="1.0,1.0"
         pixel-type="UNSIGNED_BYTE"
         pixel-size="16"
         pixel-components="4">
        <texture id="diffuse0"/>
        <texture id="diffuse1"/>
        <texture id="specular"/>
        <texture id="emission" pixel-components="3"/>
        <texture id="normal"/>
        <depth id="depth" pixel-size="24"/>
    </fbo>
    <!-- Textures -->
    <texture id="emission-map-bloom" type="bloom" num-mips="4" input-fbo="g-buffer"/>
    <texture id="ground-color" file="res/textures/materials/sand.jpg"/>
    <texture id="ground-normal" file="res/textures/brick/normal.jpg"/>
    <texture id="ground-height" file="res/textures/brick/height.jpg"/>
    <texture id="glow-map" file="res/textures/glow-map.tga" wrapping="CLAMP_TO_EDGE"/>
    <texture id="sand" file="res/textures/materials/sand.jpg"/>
    <!-- Cameras -->
    <camera id="main-camera"
            fov="45.0" near="0.1" far="200.0"
            position="25.0,2.5,2.0"
            direction="1.0,0.0,-1.0"/>

    <!--**************************-->
    <!--******* Character ********-->
    <!--**************************-->

    <mesh id="dwarf-mesh" type="asset" asset="dwarf-asset" asset-indices="*" asset-animation="1">
        <transform id="dwarf-tf">
            <rotate value="1.5707963,0.0,0.0"/>
            <translate value="2.0,0.1,16.0"/>
        </transform>
    </mesh>

    <!--**************************-->
    <!--********* Ground *********-->
    <!--**************************-->

    <mesh id="ground-mesh" type="rectangle" use-normal="1" use-texco="1" center="1" usage="STATIC" lod="4"
          rotation="0.0,0.0,3.1415"
          scaling="600.0,20.0,600.0"
          texco-scaling="60.0,60.0">
        <transform id="ground-tf">
            <translate value="0.0,-2.0,0.0"/>
        </transform>
    </mesh>

    <!--**************************-->
    <!--********* Trees *********-->
    <!--**************************-->

    <texture id="trunk-color" file="res/textures/tree/trunk/pattern_230/diffuse.tga"/>
    <texture id="trunk-normal" file="res/textures/tree/trunk/pattern_230/normal.tga"/>
    <texture id="trunk-specular" file="res/textures/tree/trunk/pattern_230/specular.tga"/>
    <texture id="twig-color" file="res/textures/tree/twig/#32/diffuse.tga" wrapping="CLAMP_TO_EDGE"/>
    <texture id="twig-normal" file="res/textures/tree/twig/#32/normal.tga" wrapping="CLAMP_TO_EDGE"/>
    <texture id="twig-specular" file="res/textures/tree/twig/#32/specular.tga" wrapping="CLAMP_TO_EDGE"/>

    <mesh id="tree-mesh" type="proctree"
            seed="499" segments="8" levels="5"
            v-multiplier="1"
            branch-length="0.5"
            branch-factor="2.2"
            drop-amount="0.24"
            grow-amount="0.044"
            sweep-amount="0"
            max-radius="0.096"
            climb-rate="0.39"
            trunk-kink="0"
            tree-steps="5"
            taper-rate="0.958"
            radius-falloff-rate="0.71"
            twist-rate="2.97"
            trunk-length="1.95"
            twig-scale="0.28"
            falloff="0.98f, 1.08f"
            clump="0.414, 0.282">
        <transform id="tree-tf">
            <scale value="4.0, 4.0, 4.0"/>
            <rotate value="1.5707963,0.0,0.0"/>
            <translate value="8.0,-2.0, -8.0"/>
        </transform>
        <physics mesh-id="tree-mesh" transform-id="tree-tf" shape="box" mass="0.0" size="0.6, 6.0, 0.6"/>
    </mesh>

    <mesh id="tree-pot" type="torus" lod="1" use-normal="1" center="1" usage="STATIC" scaling="3.0, 3.0, 3.0"
            texco-scaling="3.0, 1.0"
            ring-radius="1.0" tube-radius="0.2">
        <transform id="tree-pot-tf">
            <translate value="8.0, -1.4, -8.0"/>
        </transform>
        <physics mesh-id="tree-pot" transform-id="tree-pot-tf" shape="cylinder" mass="0.0" size="7.0,1.0,7.0"/>
        <material preset="gold" emission="0.04, 0.04, 0.04"/>
    </mesh>

    <mesh id="tree-disc" type="disc" lod="2" use-normal="1" center="1" usage="STATIC" scaling="3.0, 3.0, 3.0"
            texco-scaling="0.1, 0.1" disc-radius="1.0">
        <transform id="tree-disc-tf">
            <translate value="8.0, -1.0, -8.0"/>
        </transform>
    </mesh>

    <node id="Trees">
        <node id="tree1-trunk">
            <material emission="0.01,0.01,0.01"/>
            <texture id="trunk-color" map-to="color" />
            <texture id="trunk-normal" map-to="normal" />
            <!-- <texture id="trunk-specular" map-to="specular" /> -->
            <mesh id="tree-mesh" mesh-index="0" shader="regen.models.mesh"/>
        </node>
        <node id="tree1-twig">
            <define key="DISCARD_ALPHA" value="TRUE"/>
            <define key="DISCARD_ALPHA_THRESHOLD" value="0.25"/>
            <material emission="0.05,0.1,0.05"/>
            <texture id="twig-color" map-to="color" blend="src" texco-flipping="y" />
            <!-- <texture id="twig-normal" map-to="normal" /> -->
            <!-- <texture id="twig-specular" map-to="specular" /> -->
            <!-- transform mesh in geometry shader -->
            <define key="HAS_GS_TRANSFORM" value="TRUE"/>
            <texture name="windFlow" id="wind-flowmap" />
            <input name="stiffness" type="float" value="0.5"/>
            <!-- draw the mesh -->
            <mesh id="tree-mesh" mesh-index="1" shader="regen.models.mesh" gs="regen.states.wind.wavingQuad"/>
        </node>
        <node id="tree1-pot">
            <mesh id="tree-pot" shader="regen.models.mesh"/>
        </node>
        <node id="tree1-pot-disc">
            <texture id="sand" map-to="color" blend-mode="SRC"/>
            <mesh id="tree-disc" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--********* Garden Stuff *********-->
    <!--**************************-->

    <texture id="grass-color" file="res/textures/materials/grass/0/color.png" wrapping="CLAMP_TO_EDGE" />
    <texture id="wind-flowmap" file="res/textures/wind/flowmap0.png" wrapping="REPEAT"/>
    <texture id="wind-noise" noise="cloud" size="128.0,128.0,1.0" swizzle-g="RED" swizzle-b="RED"/>

    <node id="Grass">
        <node id="grass1" hidden="true">
            <!-- <input type="vec4" name="clipPlane" value="0.0,1.0,0.0,-2.0" /> -->
            <!-- <toggle key="MULTISAMPLE" value="1" /> -->
            <!-- <blend mode="ALPHA"/> -->
            <blend mode="SRC"/>
            <define key="DISCARD_ALPHA" value="TRUE"/>
            <define key="TES_SPACING" value="equal_spacing"/>
            <tesselation num-patch-vertices="3" lod-factor="0.5"
                    lod-metric="EDGE_DEVICE_DISTANCE" />
            <input name="lodMinDD" type="float" value="0.2"/>
            <input name="lodMaxDD" type="float" value="0.5"/>
            <!-- size and position -->
            <input name="quadSize" type="vec2" value="1.15, 0.3"/>
            <input name="posVariation" type="float" value="0.4"/>
            <input name="offset" type="vec3" value="0.0, -0.2, 0.0"/>
            <!-- color -->
            <texture id="grass-color" map-to="color" blend-mode="mul" />
            <input name="uvDarken" type="float" value="0.25"/>
            <!-- wind -->
            <texture name="windFlow" id="wind-flowmap" />
            <input name="stiffness" type="float" value="1.0"/>
            <!-- small-scale wind details -->
            <texture name="windNoise" id="wind-noise" />
            <input name="windNoiseScale" type="float" value="100.0"/>
            <input name="windNoiseSpeed" type="float" value="1.0"/>
            <input name="windNoiseStrength" type="float" value="0.1"/>
            <!-- collision with player -->
            <input name="colliderModelMat" state="dwarf-tf" component="modelMatrix" />
            <input name="colliderRadius" type="float" value="4.4"/>
            <input name="colliderStrength" type="float" value="0.7"/>
            <material
                diffuse="1.5, 1.5, 1.5"
                ambient="0.1, 0.1, 0.1"
                specular="0.0, 0.0, 0.0"
                shininess="256.0"
                emission="0.0, 0.02, 0.0"/>
            <mesh id="ground-mesh" primitive="patches" shader="regen.models.grass.patch"/>
        </node>
    </node>

    <mesh id="stone0" type="sphere" use-normal="1" use-texco="1" use-tangent="1" usage="STATIC"
            texco-mode="spherical" lod="4" scaling="3.0,2.0,3.0">
        <transform id="stone0-tf">
            <translate value="6.5, -0.6, -16.0" />
        </transform>
        <material preset="stone" variant="0" max-offset="0.2" />
        <physics mesh-id="stone0" transform-id="stone0-tf" shape="sphere" radius="2.2" mass="2.0" />
    </mesh>

    <node id="Garden-Items">
        <node import="Trees"/>
        <node id="Stone1">
            <mesh id="stone0" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--********* Stairs *********-->
    <!--**************************-->

    <mesh id="stairs0-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="8.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs0-tf">
            <translate value="16.0,-1.47,16.0"/>
        </transform>
        <physics mesh-id="stairs0-mesh" transform-id="stairs0-tf" shape="box" mass="0.0" size="16.0,0.8,8.0"/>
    </mesh>

    <mesh id="stairs1-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="6.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs1-tf">
            <translate value="16.0,-0.67,16.0"/>
        </transform>
        <physics mesh-id="stairs1-mesh" transform-id="stairs1-tf" shape="box" mass="0.0" size="12.0,0.8,8.0"/>
    </mesh>

    <mesh id="stairs2-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
        scaling="4.0,0.4,4.0" texco-scaling="0.5, 0.5">
        <transform id="stairs2-tf">
            <translate value="16.0,0.13,16.0"/>
        </transform>
        <physics mesh-id="stairs2-mesh" transform-id="stairs2-tf" shape="box" mass="0.0" size="8.0,0.8,8.0"/>
    </mesh>

    <node id="Stairs">
        <material preset="steel" variant="0"/>
        <!-- <material preset="stone" height-map-mode="parallax_occlusion" max-offset="0.2"/> -->
        <node id="stairs0">
            <mesh id="stairs0-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="stairs1">
            <mesh id="stairs1-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="stairs2">
            <mesh id="stairs2-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--******** Platforms *******-->
    <!--**************************-->

    <mesh id="platform0-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
          scaling="4.0,0.4,4.0"
          texco-scaling="0.5,0.5">
        <transform id="platform0-tf">
            <translate value="16.0,3.0,-16.0"/>
            <animation type="key-frames" mesh-id="platform0-mesh" dt="2.5">
                <key-frame position="16.0,3.0,8.0"/>
                <key-frame position="16.0,3.0,-16.0"/>
            </animation>
        </transform>
        <physics mesh-id="platform0-mesh" transform-id="platform0-tf"
                 shape="box" mass="0.0" gravity="0.0, 0.0, 0.0" friction="20.0"
                 size="8.0,0.8,8.0"/>
    </mesh>

    <mesh id="platform1-mesh" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
          scaling="4.0,0.4,4.0"
          texco-scaling="0.5,0.5">
        <transform id="platform1-tf">
            <translate value="8.0,7.0,-16.0"/>
            <animation type="key-frames" mesh-id="platform1-mesh" dt="2.5">
                <key-frame position="-20.0,7.0,-16.0"/>
                <key-frame position="8.0,7.0,-16.0"/>
            </animation>
        </transform>
        <physics mesh-id="platform1-mesh" transform-id="platform1-tf"
                 shape="box" mass="0.0" gravity="0.0, 0.0, 0.0" friction="20.0"
                 size="8.0,0.8,8.0"/>
    </mesh>

    <node id="Platforms">
        <material preset="iron" emission="0.05,0.07,0.07" />
        <node id="platform0">
            <mesh id="platform0-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="platform1">
            <mesh id="platform1-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--**************************-->

    <mesh id="statue-platform" type="box" lod="0" use-normal="1" use-tangent="1" center="1" usage="STATIC"
          scaling="3.5,5.0,3.5" texco-scaling="0.25, 0.25">
        <transform id="statue-platform-tf">
            <rotate value="1.57079632,0.0,0.0"/>
            <translate value="-16.0, 3.0, -3.0"/>
        </transform>
        <physics mesh-id="statue-platform" transform-id="statue-platform-tf"
                 shape="box" size="7.0, 10.0, 7.0" mass="0.0"/>
        <material preset="wood" variant="1" color-blend-mode="mul"
            diffuse="0.9, 0.8, 0.7"/>
    </mesh>

    <node id="Statues">
        <node id="statue-platform">
            <mesh id="statue-platform" shader="regen.models.mesh"/>
        </node>
        <node id="statue-slope">
            <define key="CRASH" value="TRUE"/>
            <mesh id="slope-mesh" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--***** Slope *****-->
    <!--**************************-->

    <mesh id="slope-mesh" type="box" use-normal="1" use-texco="1" use-tangent="1" center="1"
          usage="STATIC" lod="0" rotation="0.0,0.0,0.0" scaling="3.5,0.04,9.0" texco-scaling="0.25, 0.25">
        <transform id="slope-tf">
            <rotate value="0,0, -0.6, 0.0"/>
            <translate value="-16.0, 3.0, 7.9"/>
        </transform>
        <physics mesh-id="slope-mesh" transform-id="slope-tf" shape="box" size="7,0.08,18" mass="0.0"/>
        <material preset="wood" variant="0" color-blend-mode="mul" diffuse="0.5, 0.65, 0.75" />
    </mesh>

    <!--**************************-->
    <!--***** Particles etc. *****-->
    <!--**************************-->

    <!--
    <texture id="fire-noise" file="res/textures/fire/noise.png" wrapping="REPEAT"/>
    <texture id="fire-color" file="res/textures/fire/color.png" wrapping="CLAMP_TO_EDGE"/>

    <mesh id="fire-sprite" type="point" usage="STATIC">
        <transform>
            <translate value="42.0, 2.0, -42.0"/>
        </transform>
    </mesh>

    <node id="Fire">
        <blend mode="alpha"/>
        <define key="DISCARD_ALPHA" value="TRUE"/>
        <input type="vec2" name="spriteSize" value="8.0, 8.0"/>
        <texture id="fire-noise" name="fireNoiseTexture"/>
        <texture id="fire-color" map-to="COLOR" blend="SRC"
            texco-transfer-key="regen.models.sprite.fireTransfer1"/>
        <mesh id="fire-sprite" shader="regen.models.sprite"/>
    </node>
    -->

    <!-- A FBO with density and color attachments. -->
    <fbo id="particle-fbo" size-mode="abs" size="256.0,256.0"
            pixel-type="FLOAT" pixel-size="24">
        <texture id="density" pixel-components="1" />
        <texture id="color" pixel-components="4" />
    </fbo>
    <fbo id="particle-depth" size-mode="abs" size="256.0,256.0" pixel-type="UNSIGNED_BYTE">
        <depth id="depth" pixel-size="24" />
    </fbo>

    <texture id="particle-splat" file="res/textures/splats/flare.jpg"/>
    <texture id="particle-color-ramp" ramp="inline" format="RGB">
        <texel v="255, 255, 20"/>
        <texel v="250, 60, 20"/>
        <texel v="230, 40, 20"/>
        <texel v="160, 20, 8"/>
        <texel v="0, 0, 0"/>
        <texel v="0, 0, 0"/>
    </texture>

    <mesh id="test-particles1" type="particles" num-vertices="800" max-emits="10">
        <!-- Add shader defines. -->
        <define key="PARTICLE_EMITTER_MODE" value="IN"/>
        <define key="PARTICLE_EMITTER_SHAPE" value="DISC"/>
        <define key="OPACITY_WEIGHTED_COLOR" value="TRUE"/>
        <!-- TODO: redundant with root node -->
        <!--
        <input name="wind" type="vec2" value="0.6, 0.6"/>
        <input name="windFlowScale" type="float" value="150.0"/>
        <input name="windFlowTime" type="float" value="0.2"/>
        <texture name="windFlow" id="wind-flowmap" />
        -->
        <!-- Add shader input. -->
        <input type="vec3" name="gravity" value="0.0,9.81,0.0"/>
        <input type="float" name="dampingFactor" value="1.0"/>
        <input type="vec2" name="velocityFactorMinMax" value="5.0, 10.0"/>
        <input type="vec3" name="emitterPosition" value="0.0, -0.5, 0.0"/>
        <input type="float" name="emitterSize" value="9.0"/>
        <input type="float" name="emitterOpening" value="0.5"/>
        <input type="float" name="surfaceHeight" value="-1.0"/>
        <input type="float" name="lifetimeDefault" value="0.8"/>
        <input type="float" name="lifetimeVariance" value="0.5"/>
        <!-- <input type="vec3" name="emitterPosition" value="-16.0, 8.0, -3.0"/> -->
        <!-- <input name="cameraPosition" state="main-camera" component="cameraPosition" /> -->
        <!-- Add particle attributes. -->
        <input type="vec3" name="pos" is-attribute="1"/>
        <input type="vec3" name="velocity" is-attribute="1"/>
        <input type="float" name="mass" is-attribute="1" default="1.4" variance="0.4"/>
        <input type="float" name="size" is-attribute="1" default="0.1" variance="0.05" advance-mode="ADD" advance-constant="2.0"/>
        <transform id="platform1-tf" />
    </mesh>

    <mesh id="test-particles0" type="particles" num-vertices="800" max-emits="10">
        <!-- Add shader defines. -->
        <define key="PARTICLE_EMITTER_MODE" value="IN"/>
        <define key="PARTICLE_EMITTER_SHAPE" value="DISC"/>
        <define key="OPACITY_WEIGHTED_COLOR" value="TRUE"/>
        <!-- TODO: redundant with root node -->
        <!--
        <input name="wind" type="vec2" value="0.6, 0.6"/>
        <input name="windFlowScale" type="float" value="150.0"/>
        <input name="windFlowTime" type="float" value="0.2"/>
        <texture name="windFlow" id="wind-flowmap" />
        -->
        <!-- Add shader input. -->
        <input type="vec3" name="gravity" value="0.0,9.81,0.0"/>
        <input type="float" name="dampingFactor" value="1.0"/>
        <input type="vec2" name="velocityFactorMinMax" value="5.0, 10.0"/>
        <input type="vec3" name="emitterPosition" value="0.0, -0.5, 0.0"/>
        <input type="float" name="emitterSize" value="9.0"/>
        <input type="float" name="emitterOpening" value="0.5"/>
        <input type="float" name="surfaceHeight" value="-1.0"/>
        <input type="float" name="lifetimeDefault" value="0.8"/>
        <input type="float" name="lifetimeVariance" value="0.5"/>
        <!-- Add particle attributes. -->
        <input type="vec3" name="pos" is-attribute="1"/>
        <input type="vec3" name="velocity" is-attribute="1"/>
        <input type="float" name="mass" is-attribute="1" default="1.4" variance="0.4"/>
        <input type="float" name="size" is-attribute="1" default="0.1" variance="0.05" advance-mode="ADD" advance-constant="2.0"/>
        <transform id="platform0-tf" />
    </mesh>

    <node id="Particle-Update-Depth">
    </node>

    <node id="Particle-Update-FBO">
        <define key="USE_SOFT_PARTICLES" value="TRUE"/>
        <define key="USE_NEAR_CAMERA_SOFT_PARTICLES" value="FALSE"/>
        <depth test="0" write="0" />

        <!-- FIXME: something not working here! -->
        <!--
        <node id="Particle-Depth-Downsample">
            <fbo id="particle-depth" clear-depth="1"/>
            <depth test="0" write="1" />
            <texture name="inputTexture" fbo="g-buffer" attachment="depth" />
            <fullscreen-pass shader="regen.filter.sampling.downsample.depth"/>
        </node>
        -->
        <!--
        <node id="Particle-Depth-Downsample">
            <blit src-fbo="g-buffer" src-attachment="depth"
                  dst-fbo="particle-depth" dst-attachment="depth"/>
        </node>
        <view id="Particle-Depth">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" fbo="particle-depth" attachment="depth" />
            <fullscreen-pass shader="regen.filter.sampling.depth"/>
        </view>
        -->

        <node id="Particle-Density">
            <fbo id="particle-fbo" clear-buffers="0" draw-buffers="0" />
            <!-- TODO: there is a halo around objects, maybe it can be avoided with downsamled depeth -->
            <!--
            <texture name="depthTexture" fbo="particle-depth" attachment="depth"/>
            -->
            <texture name="depthTexture" fbo="g-buffer" attachment="depth"/>
            <texture name="splatTexture" id="particle-splat" map-to="ALPHA" blend-mode="MUL"/>
            <blend mode="add"/>
            <input type="float" name="softParticleScale" value="30.0"/>
            <input type="float" name="lifetimeSmoothstep" value="1.0"/>
            <node id="Particle-Density0">
                <mesh id="test-particles0" shader="regen.particles.sprite.density"/>
            </node>
            <node id="Particle-Density1">
                <mesh id="test-particles1" shader="regen.particles.sprite.density"/>
            </node>
        </node>

        <node id="Particle-Color">
            <define key="DISCARD_DENSITY_THRESHOLD" value="0.01"/>
            <fbo id="particle-fbo" clear-buffers="1" draw-buffers="1" />
            <blend mode="alpha" />
            <texture name="densityTexture" fbo="particle-fbo" attachment="0" />
            <texture name="colorRamp" id="particle-color-ramp" blend-mode="MUL" />
            <input type="float" name="gamma" value="1.0"/>
            <input type="float" name="exposure" value="1.0"/>
            <input type="vec4" name="color" value="1.0, 1.0, 1.0, 1.0" />
            <fullscreen-pass shader="regen.particles.sprite.densityColor" />
        </node>
        <view id="Particle-Density">
            <blit src-fbo="particle-fbo" src-attachment="0" dst-fbo="SCREEN"/>
        </view>
        <view id="Particle-Color">
            <blit src-fbo="particle-fbo" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
        <view id="Particle-Ramp">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="particle-color-ramp" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>

        <!-- Finally, create a blurred version. -->
        <node id="Particle-Blur">
            <input type="int" name="numBlurPixels" value="9" />
            <input type="float" name="blurSigma" value="2.3" />
            <filter-sequence id="particle-color" fbo="particle-fbo" attachment="1" >
                <filter shader="regen.filter.blur.horizontal" />
                <filter shader="regen.filter.blur.vertical" />
            </filter-sequence>
        </node>
        <view id="Particle-Blur">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="particle-color" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>
    </node>

    <node id="Particle-Draw">
        <blend mode="alpha" />
        <depth test="0" write="0" />
        <texture name="inputTexture" id="particle-color" />
        <define key="IS_2D_TEXTURE" value="TRUE" />
        <fullscreen-pass shader="regen.filter.sampling" />
    </node>

    <!--**************************-->
    <!--********* Shading ********-->
    <!--**************************-->

    <light id="room-light0"
           type="POINT"
           position="-5.0,16.0,0.0"
           radius="30.0,48.0"
           direction="0.0,-1.0,0.0"
           diffuse="0.8,0.9,0.835"
           ambient="0.6,0.6,0.6"/>

    <camera id="room-light-camera0"
            light="room-light0"
            camera="main-camera"/>

    <fbo id="room-light-shadow0"
         target="TEXTURE_CUBE_MAP"
         sampler-type="samplerCube"
         size-mode="abs" size="1024,1024,6">
        <depth pixel-size="24" pixel-type="FLOAT"
               wrapping="CLAMP_TO_EDGE"
               min-filter="NEAREST" mag-filter="NEAREST"
               compare-mode="COMPARE_R_TO_TEXTURE"
               compare-function="LEQUAL"
               sampler-type="samplerCubeShadow"/>
    </fbo>

    <mesh id="light-bulb-point" type="point" usage="STATIC" num-vertices="1" >
        <material diffuse="0.0, 0.0, 0.0" ambient="0.0, 0.0, 0.0" specular="0.0, 0.0, 0.0" shininess="256.0"/>
    </mesh>

    <node id="Shadow-Pass">
        <cull mode="FRONT"/>
        <define key="OUTPUT_TYPE" value="DEPTH"/>

        <node id="Room-Light-Shadow">
            <node id="Room-Light-Shadow0">
                <fbo id="room-light-shadow0" clear-depth="1"/>
                <camera id="room-light-camera0"/>
                <node import="Shadow-Caster"/>
            </node>
        </node>
    </node>

    <node id="Shading-Pass">
        <blend mode="add"/>
        <depth test="0" write="0"/>
        <input type="vec3" name="lightAmbient" value="0.3,0.3,0.3"/>
        <resource id="earth-sky"/>

        <node id="Ambient-Shading">
            <fullscreen-pass shader="regen.shading.deferred.ambient"/>
        </node>
        <node id="Light-Shading">
            <light-pass type="DIRECTIONAL" shader="regen.shading.deferred.directional">
                <light id="earth-sky-sun"/>
            </light-pass>
            <light-pass type="POINT" shader="regen.shading.deferred.point">
                <light id="room-light0"
                       shadow-buffer="room-light-shadow0" shadow-attachment="depth"
                       shadow-camera="room-light-camera0"/>
            </light-pass>
        </node>
    </node>

    <!--**************************-->
    <!--********* Objects ********-->
    <!--**************************-->

    <node id="Shadow-Caster">
        <!-- <node id="Dwarf" type="cull" mesh="dwarf-mesh" transform="dwarf-tf" shape="sphere"> -->
        <node id="Dwarf">
            <node id="dwarf-body">
                <mesh id="dwarf-mesh" mesh-index-range="1-" shader="regen.models.mesh"/>
            </node>
            <node id="dwarf-axe">
                <material emission="0.1,0.1,0.1"/>
                <mesh id="dwarf-mesh" mesh-index="0" shader="regen.models.mesh"/>
            </node>
        </node>
        <node import="Statues"/>
        <node import="Garden-Items"/>
        <node import="Stairs"/>
        <node import="Platforms"/>
    </node>

    <node id="Non-Shadow-Caster">
        <node id="Ground">
            <physics mesh-id="ground-mesh" transform-id="ground-tf" shape="triangle-mesh" mass="0.0"/>
            <texture id="sand" map-to="color" blend-mode="SRC"/>
            <material
                specular="0, 0, 0"
                diffuse="0.7, 0.8, 0.7"
                ambient="0.12, 0.28, 0.12"/>
            <mesh id="ground-mesh" shader="regen.models.mesh"/>
        </node>
        <node id="Light-Bulbs">
            <node id="Light-Bulb0">
                <input name="sphereRadius" type="float" value="1.0" />
                <input name="modelOffset" state="room-light0" component="lightPosition" />
                <input name="matEmission" state="room-light0" component="lightDiffuse" />
                <mesh id="light-bulb-point" shader="regen.models.sprite-sphere" />
            </node>
        </node>
        <node import="Grass"/>
    </node>

    <node id="Background-Objects">
        <node id="Sky">
            <sky id="earth-sky"/>
        </node>
    </node>

    <!--**************************-->
    <!--**************************-->

    <node id="Post-Pass">
        <depth test="0" write="0"/>
        <!-- blur the g-buffer attachment 1, the output is a named texture "blurred-scene" -->
        <node import="G-Buffer-Blur1"/>
        <!-- apply depth of field effect by mixing the blurred scene with the original scene -->
        <node import="Depth-of-Field">
            <fbo id="g-buffer" draw-buffers="0"/>
            <texture name="inputTexture" fbo="g-buffer" attachment="1"/>
        </node>
        <view id="Depth of Field">
            <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
        </view>
        <!-- render particles into a separate buffer -->
        <node import="Particle-Update-Depth"/>
        <node import="Particle-Update-FBO"/>
        <!-- render transparent objects -->
        <node id="Transparent-Pass">
            <fbo id="g-buffer" draw-buffers="0"/>
            <blend mode="add"/>
            <depth test="1" write="0"/>
            <!-- render emission light -->
            <node id="Material-Emission">
                <texture name="gEmissionTexture" fbo="g-buffer" attachment="4"/>
                <texture name="gEmissionBlurred" id="emission-map-bloom"/>
                <!-- <texture name="gEmissionBlurred" id="emission-map-blur" /> -->
                <fullscreen-pass shader="regen.shading.deferred.emission"/>
            </node>
            <!-- render particles -->
            <node import="Particle-Draw"/>
            <view id="Transparent Objects">
                <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
            </view>
        </node>
        <!-- apply anti-aliasing effect -->
        <node import="FXAA">
            <fbo id="g-buffer" draw-buffers="1"/>
            <texture name="inputTexture" fbo="g-buffer" attachment="0"/>
        </node>
        <view id="Antialiased Scene">
            <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
    </node>

    <node id="root">
        <input name="wind" type="vec2" value="0.6, 0.6"/>
            <!--
        <input name="wind" type="vec2">
            <animation >
                <key-frame value="0.6, 0.6" dt="0.0" />
                <key-frame value="0.8, 0.8" dt="6.0" />
                <key-frame value="0.6, 0.6" dt="6.0" />
                <key-frame value="0.61, 0.6" dt="2.0" />
            </animation>
        </input>
            -->
        <input name="windFlowScale" type="float" value="150.0"/>
        <input name="windFlowTime" type="float" value="0.2"/>

        <node id="Pre-Render">
            <!-- Render shadow maps such that they can be used in the shading pass -->
            <node import="Shadow-Pass">
                <!-- the leafs of the tree have opposing faces very close to each other,
                     so to avoid z-fighting we apply a small offset to all shadow caster. -->
                <polygon offset-fill="1.1,4.0"/>
            </node>
            <view id="Shadow-Map">
                <fbo id="SCREEN"/>
                <texture name="cubeTexture" fbo="room-light-shadow0" attachment="depth"/>
                <fullscreen-pass shader="regen.filter.sampling.cube-shadow-unfold"/>
            </view>
        </node>

        <node id="Render">
            <fbo id="g-buffer" clear-buffers="0,1,2,3,4" clear-depth="1"/>
            <camera id="main-camera"/>

            <node id="Geometry-Pass">
                <fbo id="g-buffer" draw-buffers="0,1,2,3,4"/>
                <blend mode="src"/>
                <depth test="1" write="1"/>
                <node import="Shadow-Caster"/>
                <node import="Non-Shadow-Caster"/>
                <view id="G-Buffer: Emission">
                    <blit src-fbo="g-buffer" src-attachment="4" dst-fbo="SCREEN"/>
                </view>
                <node import="G-Buffer-Views"/>
            </node>

            <node id="Post-Geometry">
                <node id="Emission-Update">
                    <input type="float" name="filterRadius" value="0.01"/>
                    <bloom fbo="g-buffer" attachment="4" bloom-texture="emission-map-bloom"/>
                </node>
                <view id="Emission Mips">
                    <fbo id="SCREEN"/>
                    <texture name="inputTexture1" id="emission-map-bloom" mip-level="0"/>
                    <texture name="inputTexture2" id="emission-map-bloom" mip-level="1"/>
                    <texture name="inputTexture3" id="emission-map-bloom" mip-level="2"/>
                    <texture name="inputTexture4" id="emission-map-bloom" mip-level="3"/>
                    <fullscreen-pass shader="regen.filter.sampling.x4"/>
                </view>
                <!--
                <node id="Emission-Blur">
                    <input type="int" name="numBlurPixels" value="4" />
                    <input type="float" name="blurSigma" value="2.0" />
                    <filter-sequence id="emission-map-blur" fbo="g-buffer" attachment="4" >
                        <filter shader="regen.filter.sampling" scale="0.5" />
                        <filter shader="regen.filter.blur.horizontal" />
                        <filter shader="regen.filter.blur.vertical" />
                    </filter-sequence>
                </node>
                -->
            </node>

            <node id="Shading">
                <fbo id="g-buffer" draw-buffers="1"/>
                <node id="Light-Pass">
                    <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
                    <texture name="gDiffuseTexture" fbo="g-buffer" attachment="0"/>
                    <texture name="gSpecularTexture" fbo="g-buffer" attachment="2"/>
                    <texture name="gNorWorldTexture" fbo="g-buffer" attachment="3"/>
                    <node import="Shading-Pass"/>
                </node>
                <view id="Shaded Scene">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
            </node>

            <node id="Post-Shading">
                <node import="Background-Objects"/>
                <view id="Scene with Background">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
                <node import="Post-Pass"/>
            </node>

            <view id="Bullet Debug">
                <node import="bullet-debug">
                    <fbo id="g-buffer" draw-buffers="1"/>
                </node>
                <node>
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </node>
            </view>
            <!--
            <node import="bullet-debug">
                <fbo id="g-buffer" draw-buffers="0"/>
            </node>
            -->

            <node import="GUI-Pass">
                <fbo id="g-buffer" draw-buffers="1"/>
            </node>

            <view id="Output Rendering">
                <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
            </view>
        </node>
    </node>
</node>
