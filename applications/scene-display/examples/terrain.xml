<?xml version="1.0" encoding="UTF-8" ?>

<node>
    <constant name="map-height" value="8.0"/>
    <constant name="map-height-half" value="4.0"/>
    <constant name="map-y-min" value="-4.0"/>
    <constant name="map-size" value="100.0"/>
    <constant name="water-surface-y" value="1.7"/>
    <constant name="num-cascades" value="5"/>

    <include xml-file="scene-display/examples/templates/default.xml"/>
    <node id="configuration"
            date="01-09-2014 06:00:00"
            time-scale="60.0">
        <camera id="main-camera"
                mode="first-person"
                speed="0.05"
                eye-offset="0.0,0.0,0.0"
                horizontal-orientation="4.71225"
                vertical-orientation="0.25">
            <anchor type="look-at" transform="grass-tf" offset="-40.0, 14.0, 0.0" />
            <anchor type="look-at" transform="grass-tf" offset="0.0, 10.0, 40.0" />
            <anchor type="look-at" transform="grass-tf" offset="0.0, 40.0, 60.0" />
            <anchor type="look-at" transform="grass-tf" offset="60.0, 40.0, 0.0" />
            <!-- TODO: why -4.0? something seems wrong?!? -->
            <anchor type="look-at" transform="hyena-tf" offset="0.0, -4.0, 1.0" follow="1" />
            <anchor type="look-at" transform="fish-tf" offset="10.0, 12.0, 10.0" />
        </camera>
        <animation id="hyena-asset" type="asset" idle="idle1">
            <!-- TODO: handle day time, and switch to sleep1 -->
            <controller id="hyena-controller"
                type="animal"
                tf="hyena-tf"
                height-map="ground-height"
                height-map-center="0, 0"
                height-map-size="{{map-size}}, {{map-size}}"
                height-map-factor="{{map-height}}"
                floor-height="-3.5"
                territory-size="57.275, 32.373"
                territory-center="-4.5166,-33.8134"
                laziness="0.5"
                run-speed="4.0"
                walk-speed="1">
                <special name="bark" />
                <special name="lick" />
            </controller>
        </animation>
    </node>

    <!-- FBO for deferred shading -->
    <fbo id="g-buffer"
         size-mode="rel" size="1.0,1.0"
         pixel-type="UNSIGNED_BYTE"
         pixel-size="16"
         pixel-components="4">
        <texture id="diffuse0"/>
        <texture id="diffuse1"/>
        <texture id="specular"/>
        <texture id="normal"/>
        <texture id="emission" pixel-components="3"/>
        <depth pixel-size="24"/>
    </fbo>
    <fbo id="reflection-buffer"
         size="512, 512"
         pixel-type="UNSIGNED_BYTE"
         pixel-size="16"
         pixel-components="4">
        <texture id="diffuse0"/>
        <texture id="diffuse1"/>
        <texture id="specular"/>
        <texture id="normal"/>
        <depth id="depth" pixel-size="24"/>
    </fbo>
    <fbo id="sun-shadow" size-mode="abs" size="2048,2048,{{num-cascades}}" >
        <depth id="depth" pixel-size="24" pixel-type="FLOAT"
            target="TEXTURE_2D_ARRAY"
            wrapping="REPEAT"
            min-filter="NEAREST"
            mag-filter="NEAREST"
            compare-mode="COMPARE_R_TO_TEXTURE"
            compare-function="LEQUAL"
            sampler-type="sampler2DArrayShadow" />
    </fbo>
    <!-- Textures -->
    <texture id="emission-map-bloom" type="bloom" num-mips="4" input-fbo="g-buffer"/>
    <texture id="ground-color" file="res/textures/terrain/canyon/diffuse.png"/>
    <texture id="ground-normal" file="res/textures/terrain/canyon/normal.png"/>
    <texture id="ground-height" file="res/textures/terrain/canyon/height.png"/>
    <texture id="grass-mask" file="res/textures/terrain/canyon/mask-grass.png"/>
    <texture id="tree-mask" file="res/textures/terrain/canyon/mask-trees.png"/>
    <texture id="grass-color" file="res/textures/materials/grass/0/color.png" wrapping="CLAMP_TO_EDGE" />
    <texture id="wind-flowmap" file="res/textures/wind/flowmap0.png" wrapping="REPEAT"/>
    <texture id="wind-noise" noise="cloud" size="128.0,128.0,1.0" swizzle-g="RED" swizzle-b="RED"/>
    <!-- Spatial Index -->
    <index id="main-index" type="quadtree" max-objects-per-node="4"/>
    <!-- Cameras -->
    <camera id="main-camera"
            culling-index="main-index"
            fov="45.0" near="0.1" far="200.0"
            position="-40.0, 14.0, 0.0"/>
    <!-- TODO: culling for directional light camera -->
    <camera id="sun-camera"
            culling-index="main-index"
            light="earth-sky-sun"
            camera="main-camera"
            num-layer="{{num-cascades}}"
            split-weight="0.9" />
    <!--
    <camera id="sun-camera"
            light="earth-sky-sun"
            camera="main-camera"
            num-layer="{{num-cascades}}"
            split-weight="0.9" />
            -->
    <!--
    <camera id="reflection-camera"
            culling-index="main-index"
            camera="main-camera"
            reflector-normal="0,1,0"
            reflector-point="0,{{water-surface-y}},0"/>
            -->
    <camera id="reflection-camera"
            camera="main-camera"
            reflector-normal="0,1,0"
            reflector-point="0,{{water-surface-y}},0"/>
    <!-- Assets -->
    <asset id="fish-asset"
           type="asset"
           file="res/models/fish-puffer/PufferFish.fbx"
           texture-path="res/models/fish-puffer"
           use-animation="0">
    </asset>
    <asset id="hyena-asset"
           type="asset"
           file="res/models/hyena/hyena.fbx"
           texture-path="res/models/hyena"
           use-animation="1"
           animation-force-states="1"
           animation-post-state="LINEAR"
           animation-pre-state="LINEAR"
           animation-tps="60.0">
        <!-- define named animation ranges. -->
        <anim-range name="walk" channel="Hyenas_A15_Walk" range="1.0,80.0" />
        <anim-range name="up" channel="Hyenas_A15_Up" range="1.0,50.0" />
        <anim-range name="tired" channel="Hyenas_A15_Tired" range="1.0,135.0" />
        <anim-range name="swim2" channel="Hyenas_A15_Swim2" range="1.0,60.0" />
        <anim-range name="swim1" channel="Hyenas_A15_Swim" range="1.0,100.0" />
        <anim-range name="stretch" channel="Hyenas_A15_Stretch" range="1.0,300.0" />
        <anim-range name="smell2" channel="Hyenas_A15_Smell2" range="1.0,300.0" />
        <anim-range name="smell1" channel="Hyenas_A15_Smell" range="1.0,185.0" />
        <anim-range name="sleep2" channel="Hyenas_A15_Sleep2" range="1.0,249.0" />
        <anim-range name="sleep1" channel="Hyenas_A15_Sleep" range="1.0,60.0" />
        <anim-range name="sit2" channel="Hyenas_A15_Sit2" range="1.0,430.0" />
        <anim-range name="sit1" channel="Hyenas_A15_Sit" range="1.0,220.0" />
        <anim-range name="run" channel="Hyenas_A15_Run" range="1.0,30.0" />
        <anim-range name="roar3" channel="Hyenas_A15_Roar3" range="1.0,110.0" />
        <anim-range name="roar2" channel="Hyenas_A15_Roar2" range="1.0,100.0" />
        <anim-range name="roar1" channel="Hyenas_A15_Roar" range="1.0,130.0" />
        <anim-range name="jump" channel="Hyenas_A15_jump" range="1.0,125.0" />
        <anim-range name="idle3" channel="Hyenas_A15_Idle3" range="1.0,140.0" />
        <anim-range name="idle2" channel="Hyenas_A15_Idle2" range="1.0,120.0" />
        <anim-range name="idle1" channel="Hyenas_A15_Idle" range="1.0,150.0" />
        <anim-range name="die" channel="Hyenas_A15_Die" range="1.0,100.0" />
        <anim-range name="breadth" channel="Hyenas_A15_BreathFast" range="1.0,60.0" />
        <anim-range name="bark" channel="Hyenas_A15_Bark" range="1.0,160.0" />
        <anim-range name="lick" channel="Hyenas_A15_Atk4" range="1.0,150.0" />
        <anim-range name="attack3" channel="Hyenas_A15_Atk3" range="1.0,80.0" />
        <anim-range name="attack2" channel="Hyenas_A15_Atk2" range="1.0,120.0" />
        <anim-range name="attack1" channel="Hyenas_A15_Atk" range="1.0,35.0" />
    </asset>
    <!-- UBOs -->
    <ubo id="Scene-UBO">
        <uniform name="planeSize" type="vec2" value="{{map-size}}, {{map-size}}"/>
        <uniform name="wind" type="vec2" value="0.6, 0.6"/>
        <uniform name="windFlowScale" type="float" value="50.0"/>
        <uniform name="windFlowTime" type="float" value="0.1"/>
        <uniform name="windStrength" type="float" value="1.0"/>
    </ubo>

    <!--**************************-->
    <!--****** Ground mesh *******-->
    <!--**************************-->

    <mesh id="ground-mesh"
          type="rectangle"
          lod="5"
          rotation="0.0,0.0,3.1415"
          scaling="{{map-size}},1.0,{{map-size}}"
          texco-scaling="1.0,-1.0"
          use-normal="1"
          use-texco="1"
          use-tangent="1"
          center="1"
          usage="STATIC"
          primitive="PATCHES">
        <transform>
            <translate value="0.0,{{map-y-min}},0.0"/>
        </transform>
    </mesh>

    <mesh id="ground-patches"
          type="rectangle"
          lod="2"
          rotation="0.0,0.0,3.1415"
          scaling="10.0,1.0,10.0"
          use-normal="1"
          use-texco="0"
          use-tangent="1"
          center="1"
          usage="STATIC"
          num-instances="100">
        <transform id="ground-tf" is-instanced="1" >
            <set mode="row" target="translate"
                x-step="10.0,0.0,0.0" x-count="10"
                z-step="0.0,0.0,10.0" />
            <translate value="-45.0,{{map-y-min}},-45.0" />
        </transform>
        <!-- TODO: shape should be defined by other ground mesh too! -->
        <shape id="ground-shape" mode="index" type="aabb" mesh-id="ground-patches" transform-id="ground-tf" />
    </mesh>

    <node id="Ground">
        <node id="Ground-quad">
            <define key="TESS_SPACING" value="equal_spacing"/>
            <!--
            <tesselation num-patch-vertices="3" lod-factor="0.2" lod-metric="FIXED_FUNCTION"/>
            -->
            <tesselation num-patch-vertices="3" lod-factor="0.2" lod-metric="EDGE_DEVICE_DISTANCE"/>
            <input name="lodMinDeviceDistance" type="float" value="0.02"/>
            <input name="lodMaxDeviceDistance" type="float" value="0.6"/>
            <!--
            <tesselation num-patch-vertices="3" lod-factor="0.275" lod-metric="EDGE_SCREEN_DISTANCE"/>
            <input name="lodMinScreenDistance" type="float" value="0.03"/>
            <input name="lodMaxScreenDistance" type="float" value="0.1"/>
            -->
            <material ambient="0.05,0.05,0.05" diffuse="0.6,0.6,0.6" fill-mode="fill"/>
            <texture name="colorTexture" id="ground-color" map-to="COLOR" mapping="xz_plane" />
            <texture name="normalTexture" id="ground-normal" map-to="NORMAL" mapping="xz_plane" />
            <texture name="heightTexture" id="ground-height" map-to="HEIGHT" mapping="xz_plane"
                     blend-mode="ADD" blend-factor="{{map-height}}"/>
            <mesh id="ground-mesh" shader="regen.models.mesh"/>
        </node>
        <!--
        <node id="Ground-patches" cull-shape="ground-shape">
            <input type="vec4" name="clipPlane" value="0.0,1.0,0.0,-2.5"/>
            <define key="TESS_SPACING" value="fractional_odd_spacing"/>
            <tesselation num-patch-vertices="3" lod-factor="0.18" lod-metric="EDGE_DEVICE_DISTANCE"/>
            <input name="lodMinDeviceDistance" type="float" value="0.15"/>
            <input name="lodMaxDeviceDistance" type="float" value="0.5"/>
            <input name="minTessLevel" type="float" value="1.0"/>
            <input name="maxTessLevel" type="float" value="72.0"/>
            <material ambient="0.05,0.05,0.05" diffuse="0.6,0.6,0.6" fill-mode="fill"/>
            <texture name="colorTexture" id="ground-color" map-to="COLOR" mapping="xz_plane" />
            <texture name="normalTexture" id="ground-normal" map-to="NORMAL" mapping="xz_plane" />
            <texture name="heightTexture" id="ground-height" map-to="HEIGHT" mapping="xz_plane"
                     blend-mode="ADD" blend-factor="5.0"/>
            <mesh id="ground-patches" primitive="patches" shader="regen.models.mesh"/>
        </node>
        -->
    </node>

    <!--**************************-->
    <!--****** Grass patches *****-->
    <!--**************************-->

    <mesh id="grass-patches"
          type="mask-patch"
          mask="grass-mask"
          lod="0"
          scaling="2.0,1.0,2.0"
          ground-size="{{map-size}},{{map-size}}"
          usage="STATIC">
        <transform id="grass-tf">
            <translate value="0.0,{{map-y-min}},0.0"/>
        </transform>
        <shape id="grass-shape" mode="index" type="aabb"
                box-size="2.0, {{map-height}}, 2.0"
                box-center="0.0, {{map-height-half}}, 0.0"
                transform-id="grass-tf">
            <has-part mesh-id="grass-patches" />
        </shape>
    </mesh>

    <node id="Grass">
        <node cull-shape="grass-shape">
            <define key="DISCARD_ALPHA" value="TRUE"/>
            <blend mode="SRC"/>
            <!-- TODO: Can we use alpha blending instead of discard alpha? it can be much faster. -->
            <!-- <blend mode="ALPHA"/>  -->
            <!-- TODO: There is some jittering in the grass with tessellation, maybe we can only switch
                       between fixed level of LODs and not do this continuously. -->
            <define key="TESS_SPACING" value="equal_spacing"/>
            <define key="TESS_POWER_OF_TWO" value="TRUE"/>
            <input name="minTessLevel" type="float" value="1.0"/>
            <input name="maxTessLevel" type="float" value="50.0"/>
            <tesselation num-patch-vertices="3" lod-factor="0.35" lod-metric="EDGE_DEVICE_DISTANCE"/>
            <input name="lodMinDeviceDistance" type="float" value="0.02"/>
            <input name="lodMaxDeviceDistance" type="float" value="0.6"/>
            <!-- use more complex geometry in close range. -->
            <define key="USE_SPRITE_LOD" value="TRUE"/>
            <input name="lodGeomLevel0" type="float" value="60.0"/>
            <input name="lodGeomLevel1" type="float" value="160.0"/>
            <input name="lodGeomBrightness0" type="float" value="1.7"/>
            <input name="lodGeomVariance" type="float" value="6.0"/>
            <!-- size and position -->
            <input name="quadSize" type="vec2" value="0.5, 0.15"/>
            <input name="posVariation" type="float" value="0.4"/>
            <input name="offset" type="vec3" value="0.0, -0.2, 0.0"/>
            <!-- color -->
            <texture id="grass-color" map-to="color" blend-mode="mul"/>
            <input name="uvDarken" type="float" value="0.25"/>
            <!-- wind -->
            <texture name="windFlow" id="wind-flowmap" />
            <input name="stiffness" type="float" value="1.0"/>
            <!-- small-scale wind details -->
            <texture name="windNoise" id="wind-noise" />
            <input name="windNoiseScale" type="float" value="100.0"/>
            <input name="windNoiseSpeed" type="float" value="1.0"/>
            <input name="windNoiseStrength" type="float" value="0.1"/>
            <!-- height -->
            <texture name="heightTexture" id="ground-height" map-to="HEIGHT" mapping="xz_plane"
                     blend-mode="ADD" blend-factor="{{map-height}}"/>
            <material
                    diffuse="1.5, 1.5, 1.5"
                    ambient="0.1, 0.1, 0.1"
                    specular="0.0, 0.0, 0.0"
                    shininess="256.0"
                    emission="0.0, 0.02, 0.0"/>
            <mesh id="grass-patches" primitive="patches" shader="regen.models.grass.patch"/>
        </node>
    </node>

    <!--**************************-->
    <!--********* Trees **********-->
    <!--**************************-->

    <mesh id="tree-mesh" type="proctree" lods="4,2,1" preset="fir">
        <!-- NOTE: trunk uses mesh index 0, twigs use index 1 -->
        <transform id="tree-tf">
            <set mode="plane"
                area-mask-texture="tree-mask"
                area-height-texture="ground-height"
                area-max-height="{{map-height}}"
                area-size="{{map-size}},{{map-size}}"
                cell-size="5.0,5.0"
                cell-offset="0.0,{{map-y-min}},0.0"
                obj-min-scale="0.4"
                obj-max-scale="0.75"
                obj-pos-variation="0.5"
                obj-density="3.4"
                obj-mesh="tree-mesh"
              />
        </transform>
        <input join="0" mesh="tree-mesh" mesh-index="1" component="matDiffuse">
            <set mode="random" min="1,1,1" max="5,4,2"/>
        </input>
        <shape id="tree-shape" mode="index" type="aabb" mesh-id="tree-mesh" mesh-index="0" transform-id="tree-tf">
            <has-part mesh-id="tree-mesh" mesh-index="1" />
        </shape>
    </mesh>

    <node id="Trees">
        <node cull-shape="tree-shape">
            <node id="tree-trunk">
                <mesh id="tree-mesh" mesh-index="0" shader="regen.models.mesh"/>
            </node>
            <node id="tree-twig">
                <define key="DISCARD_ALPHA" value="TRUE"/>
                <define key="DISCARD_ALPHA_THRESHOLD" value="0.25"/>
                <define key="HAS_GS_TRANSFORM" value="TRUE"/>
                <texture name="windFlow" id="wind-flowmap" />
                <input name="stiffness" type="float" value="0.5"/>
                <mesh id="tree-mesh" mesh-index="1" shader="regen.models.mesh" gs="regen.states.wind.wavingQuad"/>
            </node>
        </node>
    </node>

    <!--**************************-->
    <!--**** Water Reflection ****-->
    <!--**************************-->

    <node id="Reflection-Pass">
        <!-- need to load the resource before the reflection pass -->
        <camera id="reflection-camera"/>
        <fbo id="reflection-buffer" clear-buffers="0,1,2,3" clear-depth="1"/>

        <node>
            <blend mode="src"/>
            <depth test="1" write="1"/>
            <fbo id="reflection-buffer" draw-buffers="0,1,2,3"/>

            <node import="Shadow-Caster"/>
            <node import="Scene-Geometry"/>
        </node>

        <node>
            <fbo id="reflection-buffer" draw-buffers="1"/>
            <node>
                <texture name="gDepthTexture" fbo="reflection-buffer" attachment="depth"/>
                <texture name="gDiffuseTexture" fbo="reflection-buffer" attachment="0"/>
                <texture name="gSpecularTexture" fbo="reflection-buffer" attachment="2"/>
                <texture name="gNorWorldTexture" fbo="reflection-buffer" attachment="3"/>
                <node import="Shading-Pass"/>
            </node>
            <node import="Background-Objects"/>
        </node>

        <node>
            <input type="int" name="numBlurPixels" value="4"/>
            <input type="float" name="blurSigma" value="1.5"/>

            <filter-sequence id="blurred-reflection" fbo="reflection-buffer" attachment="1">
                <filter shader="regen.filter.sampling" scale="0.5"/>
                <filter shader="regen.filter.blur.horizontal"/>
                <filter shader="regen.filter.blur.vertical"/>
            </filter-sequence>
        </node>

        <view id="Reflection">
            <blit src-fbo="reflection-buffer" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
        <view id="Blurred Reflection">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="blurred-reflection" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>
    </node>

    <!--**************************-->
    <!--***** Water Rendering ****-->
    <!--**************************-->

    <texture id="water-normal" file="res/textures/water/normal.png" wrapping="REPEAT"/>
    <texture id="water-height" file="res/textures/water/height.jpg" wrapping="REPEAT"/>
    <texture id="water-foam" file="res/textures/water/foam2.jpg" wrapping="REPEAT"
             swizzle-g="RED" swizzle-b="RED"/>

    <ubo id="Water-UBO">
        <input type="vec4" name="normalModifier" value="1.0,2.0,4.0,8.0"/>
        <input type="vec3" name="waterColor" value="0.0078,0.4,0.55"/>
        <input type="float" name="sunScale" value="1.5"/>
        <input type="vec3" name="deepWaterColor" value="0.0078,0.5176,0.7"/>
        <input type="float" name="shininess" value="0.2"/>
        <input type="vec3" name="colorExtinction" value="7.0,30.0,40.0"/>
        <input type="float" name="fadeSpeed" value="0.1"/>
        <input type="vec3" name="foamExistence" value="0.45,1.35,1.25"/>
        <input type="float" name="foamIntensity" value="0.5"/>
        <input type="vec2" name="windDirection" value="0.9,0.0"/>
        <input type="vec2" name="waveScale" value="0.05,0.05"/>
        <input type="float" name="heightTextureSize" value="256.0"/>
        <input type="float" name="surfaceHeight" value="{{water-surface-y}}"/>
        <input type="float" name="normalScale" value="3.0"/>
        <input type="float" name="refractionConstant" value="30.0"/>
        <input type="float" name="refractionStrength" value="0.24"/>
        <input type="float" name="shoreHardness" value="0.1"/>
        <input type="float" name="maxAmplitude" value="1.5"/>
        <input type="float" name="reflectionDisplace" value="10.0"/>
        <input type="float" name="visibility" value="0.9"/>
        <input type="float" name="foamHardness" value="1.0"/>
    </ubo>

    <node id="Water-Rendering">
        <depth test="0" write="0"/>
        <blend mode="src"/>

        <define key="USE_REFRACTION" value="TRUE"/>
        <define key="USE_FOAM" value="FALSE"/>
        <define key="USE_RIPPLES" value="TRUE"/>
        <define key="USE_SPECULAR" value="TRUE"/>

        <input name="WaterUBO" ubo="Water-UBO"/>
        <texture name="depthTexture" fbo="g-buffer" attachment="depth"/>
        <texture name="refractionTexture" fbo="g-buffer" attachment="1"/>
        <texture name="reflectionTexture" id="blurred-reflection"/>
        <texture name="normalTexture" id="water-normal"/>
        <texture name="heightTexture" id="water-height"/>
        <texture name="foamTexture" id="water-foam"/>
        <input type="time" name="time" scale="0.003"/>
        <!-- imported inputs -->
        <input name="reflectionMatrix" state="reflection-camera" component="viewProjectionMatrix"/>
        <input name="sunDirection" state="earth-sky-sun" component="lightDirection"/>
        <input name="sunColor" state="earth-sky-sun" component="lightDiffuse"/>

        <fullscreen-pass shader="regen.filter.water"/>
    </node>

    <!--**************************-->
    <!--********* Animals **********-->
    <!--**************************-->

    <mesh id="fish-mesh" type="asset" asset="fish-asset" asset-indices="*" asset-animation="0">
        <transform id="fish-tf">
            <rotate value="1.2, 0.0, 0.0"/>
            <scale value="0.001, 0.001, 0.001"/>
            <translate value="0.0, 1.0, 4.0"/>
        </transform>
        <shape id="fish-shape" mode="index" type="obb" mesh-id="fish-mesh" transform-id="fish-tf" />
    </mesh>

    <mesh id="hyena-mesh" type="asset" asset="hyena-asset" asset-indices="*" asset-animation="1">
        <transform id="hyena-tf">
            <rotate value="0, 1.57079, 1.57079"/>
            <scale value="0.005, 0.005, 0.005"/>
            <translate value="-2, 3.0, -24"/>
        </transform>
        <shape id="hyena-shape" mode="index" type="obb" mesh-id="hyena-mesh" transform-id="hyena-tf" />
    </mesh>

    <node id="Animals">
        <node id="fish0" cull-shape="fish-shape">
            <mesh id="fish-mesh" mesh-index="0" shader="regen.models.mesh"/>
        </node>
        <node id="hyena0" cull-shape="hyena-shape">
            <mesh id="hyena-mesh" mesh-index="0" shader="regen.models.mesh"/>
        </node>
    </node>

    <!--**************************-->
    <!--**************************-->

    <node id="Shadow-Caster">
        <node import="Animals"/>
        <node import="Trees"/>
    </node>

    <node id="Scene-Geometry">
        <node import="Grass"/>
        <node import="Ground"/>
    </node>

    <node id="Background-Objects">
        <node id="Sky">
            <sky id="earth-sky"/>
        </node>
    </node>

    <node id="Shading-Pass">
        <blend mode="add"/>
        <depth test="0" write="0"/>
        <input type="vec3" name="lightAmbient" value="0.2,0.2,0.2"/>

        <node id="Ambient-Shading">
            <fullscreen-pass shader="regen.shading.deferred.ambient"/>
        </node>
        <node id="Light-Shading">
            <define key="DEBUG_SHADOW_SLICES" value="0" />
            <light-pass type="DIRECTIONAL"
                shader="regen.shading.deferred.directional"
                shadow-filter="NONE">
                <light id="earth-sky-sun"
                    shadow-buffer="sun-shadow"
                    shadow-attachment="depth"
                    shadow-camera="sun-camera" />
            </light-pass>
            <!--
            <light-pass type="DIRECTIONAL"
                        shader="regen.shading.deferred.directional">
                <light id="earth-sky"/>
                <light id="earth-sky-moon"/>
            </light-pass>
            -->
        </node>
    </node>

    <!--**************************-->
    <!--** Post shading effects **-->
    <!--**************************-->

    <node id="Post-Pass">
        <depth test="0" write="0"/>
        <node import="Water-Rendering">
            <fbo id="g-buffer" draw-buffers="0"/>
        </node>

        <!-- render transparent objects -->
        <node id="Transparent-Pass">
            <fbo id="g-buffer" draw-buffers="0"/>
            <blend mode="add"/>
            <depth test="1" write="0"/>
            <!-- render emission light -->
            <node id="Material-Emission">
                <texture name="gEmissionTexture" fbo="g-buffer" attachment="4"/>
                <texture name="gEmissionBlurred" id="emission-map-bloom"/>
                <!-- <texture name="gEmissionBlurred" id="emission-map-blur" /> -->
                <fullscreen-pass shader="regen.shading.deferred.emission"/>
            </node>
            <!-- <node import="Fire" /> -->
            <view id="Transparent Objects">
                <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN"/>
            </view>
        </node>

        <node id="Distance-Fog">
            <blend mode="alpha"/>
            <input type="float" name="fogDensity" value="0.66"/>
            <input type="vec2" name="fogDistance" value="52.0,86.0"/>
            <input type="vec3" name="fogColor" value="0.2,0.2,0.2"/>
            <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
            <texture name="skyColorTexture" id="earth-sky"/>
            <define key="USE_SKY_COLOR" value="TRUE"/>
            <fullscreen-pass shader="regen.shading.fog.distance"/>
        </node>

        <node import="Scene-Blur"/>
        <node import="ToneMapping">
            <fbo id="g-buffer" draw-buffers="1"/>
        </node>
        <view id="Scene -- ToneMapping">
            <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
        </view>
    </node>

    <node id="Scene-Blur">
        <input type="int" name="numBlurPixels" value="10"/>
        <input type="float" name="blurSigma" value="2.5"/>

        <filter-sequence id="blurred-scene" fbo="g-buffer" attachment="0">
            <filter shader="regen.filter.sampling" scale="0.5"/>
            <filter shader="regen.filter.blur.horizontal"/>
            <filter shader="regen.filter.blur.vertical"/>
        </filter-sequence>

        <view id="Blurred Scene">
            <fbo id="SCREEN"/>
            <texture name="inputTexture" id="blurred-scene" />
            <fullscreen-pass shader="regen.filter.sampling"/>
        </view>
    </node>

    <ubo id="ToneMapping">
        <input type="float" name="blurAmount" value="0.3"/>
        <input type="float" name="effectAmount" value="0.1"/>
        <input type="float" name="exposure" value="1.7"/>
        <input type="float" name="gamma" value="1.1"/>
        <input type="float" name="radialBlurSamples" value="26.0"/>
        <input type="float" name="radialBlurStartScale" value="1.0"/>
        <input type="float" name="radialBlurScaleMul" value="0.9555"/>
        <input type="float" name="vignetteInner" value="0.9"/>
        <input type="float" name="vignetteOuter" value="1.75"/>
    </ubo>

    <node id="ToneMapping">
        <define key="USE_RADIAL_BLUR" value="TRUE"/>
        <define key="USE_VIGNETTE" value="TRUE"/>
        <texture name="inputTexture" fbo="g-buffer" attachment="0"/>
        <texture name="blurTexture" id="blurred-scene"/>
        <input name="ToneMapping" ubo="ToneMapping"/>
        <fullscreen-pass shader="regen.filter.tonemap"/>
    </node>

    <!--**************************-->
    <!--**************************-->

    <node id="root">
        <resource id="earth-sky" />
        <input name="Scene" ubo="Scene-UBO"/>

        <node id="Pre-Render">
            <node import="Reflection-Pass"/>
            <node id="Shadow-Pass">
                <!-- the leafs of the tree have opposing faces very close to each other,
                     so to avoid z-fighting we apply a small offset to all shadow caster. -->
                <polygon offset-fill="1.1,4.0"/>
                <define key="OUTPUT_TYPE" value="DEPTH" />
                <cull mode="FRONT" />
                <fbo id="sun-shadow" clear-depth="1" />
                <camera id="sun-camera" />
                <node import="Shadow-Caster" />
            </node>
            <view id="Sun Shadow Map">
                <fbo id="SCREEN"/>
                <texture name="arrayTexture" fbo="sun-shadow" attachment="depth"/>
                <input type="int" name="arrayTextureSize" value="{{num-cascades}}"/>
                <fullscreen-pass shader="regen.filter.sampling.array-row-shadow"/>
            </view>
        </node>

        <node id="Debugging">
            <node import="overview-node"/>
        </node>

        <node id="Render">
            <fbo id="g-buffer" clear-buffers="0,1,2,3,4" clear-depth="1"/>
            <camera id="main-camera" />

            <node id="Geometry-Pass">
                <fbo id="g-buffer" draw-buffers="0,1,2,3,4"/>
                <blend mode="src"/>
                <depth test="1" write="1"/>
                <node import="Shadow-Caster"/>
                <node import="Scene-Geometry"/>
                <node import="G-Buffer-Views"/>
                <view id="G-Buffer: Emission">
                    <blit src-fbo="g-buffer" src-attachment="4" dst-fbo="SCREEN"/>
                </view>
            </node>

            <node id="Post-Geometry">
                <node id="Emission-Update">
                    <input type="float" name="filterRadius" value="0.01"/>
                    <bloom fbo="g-buffer" attachment="4" bloom-texture="emission-map-bloom"/>
                </node>
                <view id="Emission Mips">
                    <fbo id="SCREEN"/>
                    <texture name="inputTexture1" id="emission-map-bloom" mip-level="0"/>
                    <texture name="inputTexture2" id="emission-map-bloom" mip-level="1"/>
                    <texture name="inputTexture3" id="emission-map-bloom" mip-level="2"/>
                    <texture name="inputTexture4" id="emission-map-bloom" mip-level="3"/>
                    <fullscreen-pass shader="regen.filter.sampling.x4"/>
                </view>
            </node>

            <node id="Shading">
                <fbo id="g-buffer" draw-buffers="1"/>
                <node id="Light-Pass">
                    <texture name="gDepthTexture" fbo="g-buffer" attachment="depth"/>
                    <texture name="gDiffuseTexture" fbo="g-buffer" attachment="0"/>
                    <texture name="gSpecularTexture" fbo="g-buffer" attachment="2"/>
                    <texture name="gNorWorldTexture" fbo="g-buffer" attachment="3"/>
                    <node import="Shading-Pass"/>
                </node>
                <view id="Shaded Scene">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
            </node>

            <node id="Post-Shading">
                <node import="Background-Objects"/>
                <view id="Scene with Background">
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </view>
                <node import="Post-Pass"/>
            </node>

            <view id="Spatial Index">
                <node import="spatial-index-debug">
                    <camera id="main-camera"/>
                    <fbo id="g-buffer" draw-buffers="1"/>
                </node>
                <node>
                    <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
                </node>
            </view>

            <node import="GUI-Pass">
                <fbo id="g-buffer" draw-buffers="1"/>
            </node>

            <view id="Scene -- Result">
                <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN"/>
            </view>
        </node>
    </node>
</node>
