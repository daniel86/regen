<?xml version="1.0" encoding="UTF-8" ?>

<include xml-file="scene-display/examples/default.xml" />

<!-- Framebuffer Objects -->
<fbo id="paraboloid-reflection-buffer"
     size-mode="abs" size="512,512,2"
     wrapping="CLAMP_TO_EDGE"
     target="TEXTURE_2D_ARRAY"
     sampler-type="sampler2DArray">
  <texture id="diffuse0"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="diffuse1"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="specular"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="normal"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <depth id="depth" pixel-size="24" />
</fbo>
<fbo id="cube-reflection-buffer"
     size-mode="abs" size="256,256,6"
     wrapping="REPEAT"
     target="TEXTURE_CUBE_MAP"
     sampler-type="samplerCube">
  <texture id="diffuse0"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="diffuse1"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="specular"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <texture id="normal"
	   pixel-type="UNSIGNED_BYTE"
	   pixel-size="16"
	   pixel-components="4" />
  <depth id="depth" pixel-size="24" />
</fbo>

<!-- Textures -->
<texture id="rain-database" is-array="1"
	 file="res/textures/rain" name-pattern=".*.png" />
<!-- Cameras -->
<camera id="main-camera"
	fov="45.0" near="0.1" far="200.0"
	position="0.0,1.5,-8.0"
	direction="0.0,-0.25,1.0" />
<camera id="paraboloid-camera"
	camera="main-camera"
	paraboloid-mesh="sphere-mesh0"
	has-back-face="1" />
<camera id="cube-camera"
	camera="main-camera"
	cube-mesh="sphere-mesh1" />
<!-- Some meshes -->
<mesh id="bowl"
      type="half-sphere"
      lod="4"
      scaling="10.0,1.5,7.5"
      use-normal="1"
      use-tangent="0"
      usage="STATIC">
  <define key="HAS_TWO_SIDES" value="TRUE" />
  <material preset="copper"/>
  <transform shape="triangle-mesh" mesh="bowl" mass="0.0">
    <translate value="0.0,-1.0,0.0" />
  </tranform>
</mesh>
<mesh id="sphere-mesh0"
      type="sphere"
      lod="4"
      scaling="1.0,1.0,1.0"
      texco-scaling="1.0,1.0"
      use-normal="1"
      use-tangent="0"
      usage="STATIC">
  <transform shape="sphere" radius="1.0" mass="1.0" inertia="0.0,-1.0,0.0" friction="0.0">
    <translate value="-1.45,3.0,0.0" />
  </tranform>
</mesh>
<mesh id="sphere-mesh1"
      type="sphere"
      lod="4"
      scaling="1.0,1.0,1.0"
      texco-scaling="1.0,1.0"
      use-normal="1"
      use-tangent="0"
      usage="STATIC">
  <material preset="ruby" />
  <transform shape="sphere" radius="1.0" mass="1.0" inertia="0.0,-1.0,0.0" friction="0.0">
    <translate value="2.0,3.5,0.0" />
  </tranform>
</mesh>
<mesh id="sphere-mesh2"
      type="sphere"
      lod="4"
      scaling="0.35,0.35,0.35"
      texco-scaling="1.0,1.0"
      use-normal="1"
      use-tangent="0"
      usage="STATIC"
      num-instances="40">
  <material preset="ruby" />
  <transform is-instanced="1"
	     shape="sphere" radius="0.35" mass="0.4"
	     inertia="0.0,0.0,0.0" friction="0.0">
    <set mode="row" target="translate"
	 x-step="0.5,0.0,0.0" x-count="5"
	 z-step="0.0,0.0,0.5" />
    <translate value="-2.0,1.5,-1.0" />
  </transform>
</mesh>
<mesh id="rain-particles"
      type="particles"
      num-vertices="50000"
      update-shader="regen.particles.rain.update">
  <!-- Add shader input. -->
  <input type="vec3" name="wind" value="-0.8,-4.5,0" />
  <input type="vec3" name="rainVelocity" value="0.5,0.75,0.5" />
  <input type="vec2" name="rainBrightness" value="5.0,2.0" />
  <input type="vec2" name="rainCone" value="60.0,30.0" />
  <input name="cameraPosition" state="main-camera" component="cameraPosition" />
  <!-- Add particle attributes. -->
  <input type="vec3" name="pos" is-attribute="1" />
  <input type="vec3" name="velocity" is-attribute="1" />
  <input type="int" name="type" is-attribute="1" />
  <input type="float" name="brightness" is-attribute="1" />
</mesh>

<!--**************************-->
<!--**************************-->

<node id="paraboloid-reflection-pass">
  <camera id="paraboloid-camera" />
  <fbo id="paraboloid-reflection-buffer"
       clear-buffers="0,1,2,3" clear-depth="1" />
  
  <node>
    <blend mode="src" />
    <depth test="1" write="1" />
    <fbo id="paraboloid-reflection-buffer" draw-buffers="0,2,3" />
    
    <node import="scene-geometry" />
  </node>
  
  <node>
    <fbo id="paraboloid-reflection-buffer" draw-buffers="1" />
    <node>
      <texture name="gDepthTexture" fbo="paraboloid-reflection-buffer" attachment="depth" />
      <texture name="gDiffuseTexture" fbo="paraboloid-reflection-buffer" attachment="0" />
      <texture name="gSpecularTexture" fbo="paraboloid-reflection-buffer" attachment="2" />
      <texture name="gNorWorldTexture" fbo="paraboloid-reflection-buffer" attachment="3" />
      <node import="shading-pass" />
    </node>
    <node import="background-pass" />
    <node import="cube-reflector" />
  </node>
  
  <view id="Paraboloid Reflection -- Result">
    <fbo id="SCREEN" />
    <texture name="arrayTexture" fbo="paraboloid-reflection-buffer" attachment="1" />
    <input type="int" name="arrayTextureSize" value="2" />
    <fullscreen-pass shader="regen.filter.sampling.array-row" />
  </view>
</node>

<node id="cube-reflection-pass">
  <camera id="cube-camera" />
  <fbo id="cube-reflection-buffer"
       clear-buffers="0,1,2,3" clear-depth="1" />
  
  <node>
    <blend mode="src" />
    <depth test="1" write="1" />
    <fbo id="cube-reflection-buffer" draw-buffers="0,2,3" />
    
    <node import="scene-geometry" />
  </node>
  
  <node>
    <fbo id="cube-reflection-buffer" draw-buffers="1" />
    <node>
      <texture name="gDepthTexture" fbo="cube-reflection-buffer" attachment="depth" />
      <texture name="gDiffuseTexture" fbo="cube-reflection-buffer" attachment="0" />
      <texture name="gSpecularTexture" fbo="cube-reflection-buffer" attachment="2" />
      <texture name="gNorWorldTexture" fbo="cube-reflection-buffer" attachment="3" />
      <node import="shading-pass" />
    </node>
    <node import="background-pass" />
    <node import="paraboloid-reflector" />
  </node>
  
  <view id="Cube Reflection -- Result">
    <fbo id="SCREEN" />
    <texture name="cubeTexture" fbo="cube-reflection-buffer" attachment="1" />
    <fullscreen-pass shader="regen.filter.sampling.cube-unfold" />
  </view>
</node>

<node id="main-pass">
  <node id="geometry-pass">
    <blend mode="src" />
    <depth test="1" write="1" />
    <fbo id="g-buffer" draw-buffers="0,2,3" />
    
    <node import="scene-geometry" />
  </node>
  
  <node>
    <fbo id="g-buffer" draw-buffers="1" />
    
    <node>
      <texture name="gDepthTexture" fbo="g-buffer" attachment="depth" />
      <texture name="gDiffuseTexture" fbo="g-buffer" attachment="0" />
      <texture name="gSpecularTexture" fbo="g-buffer" attachment="2" />
      <texture name="gNorWorldTexture" fbo="g-buffer" attachment="3" />
      <node import="shading-pass" />
      <view id="Scene -- Shading">
	<blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN" />
      </view>
    </node>
    
    <node import="background-pass" />
    <view id="Sky Cube">
      <fbo id="SCREEN" />
      <texture name="cubeTexture" id="earth-sky" />
      <fullscreen-pass shader="regen.filter.sampling.cube-unfold" />
    </view>
    <view id="Scene -- Sky">
      <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN" />
    </view>
    
    <node import="paraboloid-reflector" />
    <node import="cube-reflector" />
    <view id="Scene -- Reflections">
      <blit src-fbo="g-buffer" src-attachment="1" dst-fbo="SCREEN" />
    </view>
    
    <node import="rain-pass" />
  </node>
</node>

<node id="scene-geometry">
  <node id="instanced-spheres" >
    <mesh id="sphere-mesh2" shader="regen.models.mesh" />
  </node>
  <node id="bowl" >
    <toggle key="CULL_FACE" value="0" />
    <mesh id="bowl" shader="regen.models.mesh" />
  </node>
</node>

<node id="paraboloid-reflector">
  <define key="IS_PARABOLOID_DUAL" value="TRUE" />
  <define key="SHADING" value="NONE" />
  
  <material preset="chrome" />
  <input name="reflectionMatrix" state="paraboloid-camera" component="viewProjectionMatrix" />
  
  <texture fbo="paraboloid-reflection-buffer" attachment="1"
	   map-to="COLOR"
	   blend-mode="SRC"
	   mapping="PARABOLOID_REFLECTION" />
  
  <mesh id="sphere-mesh0" shader="regen.models.mesh" />
</node>

<node id="cube-reflector">
  <define key="SHADING" value="NONE" />
  
  <material preset="chrome" />
  
  <texture fbo="cube-reflection-buffer" attachment="1"
	   map-to="COLOR"
	   blend-mode="SRC"
	   mapping="CUBE_REFLECTION" />
  
  <mesh id="sphere-mesh1" shader="regen.models.mesh" />
</node>

<node id="rain-pass">
  <direct-shading ambient="0.3,0.3,0.3" >
    <!-- Define lights used for direct shading. -->
    <direct-lights>
      <light id="earth-sky" />
    </direct-lights>
    
    <direct-pass>
	<node id="particle-draw">
	  <blend mode="add" />
	  <depth test="1" write="0" />
	  <define key="USE_RAIN_DB" value="TRUE" />
	  
	  <texture name="depthTexture" fbo="g-buffer" attachment="depth" />
	  <texture name="rainDB" id="rain-database" />
	  <input type="vec2" name="particleSize" value="0.07,5.0" />
	  
	  <mesh id="rain-particles" shader="regen.particles.rain.draw" />
	</node>
    </direct-pass>
  </direct-shading>
</node>

<node id="shading-pass">
  <blend mode="add" />
  <depth test="0" write="0" />
  <input type="vec3" name="lightAmbient" value="0.1,0.1,0.1" />
    
  <node>
    <fullscreen-pass shader="regen.shading.deferred.ambient" />

    <light-pass type="DIRECTIONAL" shader="regen.shading.deferred.directional">
      <light id="earth-sky" />
    </light-pass>
  </node>
</node>

<node id="background-pass">
  <depth test="1" write="0" />
  
  <node id="sky-node">
    <mesh id="earth-sky" />
  </node>
</node>

<!--**************************-->
<!--**************************-->

<node id="post-pass">
  <depth test="0" write="0" />
  
  <node id="fxaa">
    <fbo id="g-buffer" draw-buffers="0" />
    <texture name="inputTexture" fbo="g-buffer" attachment="1" />
    <input type="float" name="spanMax" value="8.0" />
    <input type="float" name="reduceMul" value="0.125" />
    <input type="float" name="reduceMin" value="0.0078125" />
    <input type="vec3" name="luma" value="0.299,0.587,0.114" />
    
    <fullscreen-pass shader="regen.filter.fxaa" />
  </node>
  <view id="Scene -- Antialiased">
    <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN" />
  </view>
</node>

<!--**************************-->
<!--**************************-->

<node id="root">
  <node id="pre-render">
    <node import="paraboloid-reflection-pass" />
    <node import="cube-reflection-pass" />
  </node>
  
  <node id="render">
    <fbo id="g-buffer" clear-buffers="0,1,2,3" clear-depth="1" />
    <camera id="main-camera" />
    
    <node import="main-pass" />
    <node import="post-pass" />
    
    <node id="GUI">
      <fbo id="g-buffer" draw-buffers="0" />
      <node import="gui-pass" />
    </node>
    
    <view id="Scene -- Result">
      <blit src-fbo="g-buffer" src-attachment="0" dst-fbo="SCREEN" />
    </view>
  </node>
</node>
